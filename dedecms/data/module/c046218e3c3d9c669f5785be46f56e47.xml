<module>
<baseinfo>
name=神箭手云爬虫插件
team=杭州快忆科技
time=2016-09-19
email=help@shenjianshou.cn
url=http://www.shenjianshou.cn
hash=c046218e3c3d9c669f5785be46f56e47
indexname=shenjianshou
indexurl=../shenjianshou
ismember=1
autosetup=1
autodel=1
lang=gb2312
moduletype=soft
</baseinfo>
<systemfile>
<menustring>
PG06dG9wIG5hbWU9J8nxvP3K1tTGxcCz5rLlvP4nIGM9JzYsJyBkaXNwbGF5PSdibG9jaycgcmFuaz0nJz4NCjxtOml0ZW0gbmFtZT0nsuW8/rbLxeTWwycgbGluaz0nLi4vc2hlbmppYW5zaG91L2FkbWluLnBocD9jdD1jb25maWdDb250cm9sbGVyJyByYW5rPScnIHRhcmdldD0nbWFpbicgLz4NCjwvbTp0b3A+DQo=
</menustring>
<readme>
PHAgc3R5bGU9J2xpbmUtaGVpZ2h0OjE1MCUnPjxwIHN0eWxlPSdsaW5lLWhlaWdodDoxNTAlJz67ttOtyrnTw8nxvP3K1tTGxcCz5kRFREVDTVOy5bz+PGJyIC8+PGJyIC8+DQrTw7unyrnTw9Ct0uk8YnIgLz48YnIgLz4NCjGjurG+z7XNs7Dmsb7OtL6t1/fV39TK0O2yu7XDy73X1Neqwuuhore0seDS66Giz/rK26GjPGJyIC8+PGJyIC8+DQoyo7qxvs+1zbPKytPDREVERUNNUyBnYmujrMbky/uw5rG+zrS+rbLiytSju8fr19TQ0Lj5vt3Q6NKqwcu94s/gudjQxc+ioaM8YnIgLz48YnIgLz4NCjOjurK7tcPTw9PazqW3qMTayN2jrM6lt7S4w8z1svrJ+rXEuvO5+9fU0NCz0LWjoaM8YnIgLz48YnIgLz4NCjSjurG+0K3S6b32z97T2rG+yO28/rXEsb6w5rG+o6zQrdLpy+bNrMjtvP7Su8bwt9a3oqGjPGJyIC8+PGJyIC8+DQo1o7qxvsjtvP6y+siouenK9Lq81t2/7NLkv8a8vNPQz965q8u+o6y52be9v823/qO6Mjg3OTgzNTk4NKOsyO28/sv509DIy72ruPm+3dDo0qq9qMGixuTL+727wffGvcyoo6zP4LnY0MXPor2r08nJz8r208rP5Leis/a78rrz0Piw5rG+uau45qGjPGJyIC8+PGJyIC8+DQo2o7rTydPazfjC57u3vrO1xLyrtPOyu8i3tqjQ1KOssb7I7bz+1/fV37K7s9C1o8q508OxvsjtvP68sMbkxcnJ+sa3svrJ+rXEyM66zsvwyqe78s6juqahozxiciAvPjxiciAvPg0KN6O6svrIqMv509DIy8rTt6LVudDo0qq9qMGiv6q3otfpoaKx5Lj8svrIqKOs0uXO8b340NDI7bz+tcTOrLukyf28trXIo6y1q7K7vt/T0LeowsnHv9bG1PDIzqGjPGJyIC8+PGJyIC8+DQo4o7qxvtCt0unOtL6h1q60ptfx0a3W0LuqyMvD8bmyus25+taqyray+siosaO7pM/gudi3qMLJoaM8L3A+PC9wPg==
</readme>
<setupsql40>
Q1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgYCNAX190YWNvbmZpZ2AgKCBgaWRgIGludCgxMSkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsIGBrZXlgIHZhcmNoYXIoMjU1KSBDT0xMQVRFIGdia19jaGluZXNlX2NpIE5PVCBOVUxMLCBgdmFsdWVgIHZhcmNoYXIoMjU1KSBDT0xMQVRFIGdia19jaGluZXNlX2NpIE5VTEwsIGBjb2RlYCB2YXJjaGFyKDI1NSkgQ09MTEFURSBnYmtfY2hpbmVzZV9jaSBOVUxMLCAgUFJJTUFSWSBLRVkgKGBpZGApICkgRU5HSU5FPU15SVNBTSBERUZBVUxUIENIQVJTRVQ9Z2JrOw0KaW5zZXJ0IGludG8gYCNAX190YWNvbmZpZ2AgKGBrZXlgLCBgdmFsdWVgKSB2YWx1ZXMoJ3Bhc3N3b3JkJywgJ3NoZW5qaWFuc2hvdS5jbicpOw==
</setupsql40>
<delsql>
ZHJvcCBUQUJMRSAjQF9fdGFjb25maWc=
</delsql>
<setup>

</setup>
<uninstall>

</uninstall>
<oldfilelist>
../shenjianshou
</oldfilelist>
</systemfile>

<modulefiles>
<file type='dir' name='../shenjianshou'>
</file>
<file type='file' name='../shenjianshou/admin.php'>
PD9waHANCiRwYWdlX3N0YXJ0X3RpbWUgPSBtaWNyb3RpbWUoVFJVRSk7DQpyZXF1aXJlX29uY2UoZGlybmFtZShfX2ZpbGVfXykuJy8uLi9pbmNsdWRlL2NvbW1vbi5pbmMucGhwJyk7DQpyZXF1aXJlX29uY2UoREVERUlOQy4nL3VzZXJsb2dpbi5jbGFzcy5waHAnKTsNCnJlcXVpcmVfb25jZShERURFSU5DLicvcmVxdWVzdC5jbGFzcy5waHAnKTsNCg0KZGVmaW5lKCdERURUQScsZGlybmFtZShfX0ZJTEVfXykpOw0KcmVxdWlyZV9vbmNlKERFRFRBLicvbGlicmFyaWVzL2NvbmZpZy5waHAnKTsNCnJlcXVpcmVfb25jZShERURUQS4nL2xpYnJhcmllcy90YS5mdW5jdGlvbnMucGhwJyk7DQoNCiRkc3FsLT5zYWZlQ2hlY2sgPSBmYWxzZTsNCiRkc3FsLT5TZXRMb25nTGluaygpOw0KLy+87NHp08O7p7XHwrzXtMysDQokY3VzZXJMb2dpbiA9IG5ldyB1c2VyTG9naW4oKTsNCmlmKCRjdXNlckxvZ2luLT5nZXRVc2VySUQoKT09LTEpDQp7DQogICAgU2hvd01zZygi0OjSqsrHudzA7dSxtcfCvbLFxNy5u7fDzsoiLCdpbmRleC5waHAnKTsNCiAgICBleGl0KCk7DQp9DQpkZWZpbmUoJ0RFREVBU0snLGRpcm5hbWUoX19GSUxFX18pKTsNCmlmKCRjZmdfZGVkZV9sb2c9PSdZJykNCnsNCgkkc19ub2xvZ2ZpbGUgPSAnX21haW58X2xpc3QnOw0KCSRzX25lZWRsb2dmaWxlID0gJ3N5c198ZmlsZV8nOw0KCSRzX21ldGhvZCA9IGlzc2V0KCRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddKSA/ICRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddIDogJyc7DQoJJHNfcXVlcnkgPSBpc3NldCgkZGVkZU5vd3VybHNbMV0pID8gJGRlZGVOb3d1cmxzWzFdIDogJyc7DQoJJHNfc2NyaXB0TmFtZXMgPSBleHBsb2RlKCcvJywkc19zY3JpcHROYW1lKTsNCgkkc19zY3JpcHROYW1lcyA9ICRzX3NjcmlwdE5hbWVzW2NvdW50KCRzX3NjcmlwdE5hbWVzKS0xXTsNCgkkc191c2VyaXAgPSBHZXRJUCgpOw0KCWlmKCAkc19tZXRob2Q9PSdQT1NUJyB8fCAoIXByZWdfbWF0Y2goJHNfbm9sb2dmaWxlLCRzX3NjcmlwdE5hbWVzKSAmJiAkc19xdWVyeSE9JycpIHx8IHByZWdfbWF0Y2goJHNfbmVlZGxvZ2ZpbGUsJHNfc2NyaXB0TmFtZXMpICkNCgl7DQoJCSRpbnF1ZXJ5ID0gIklOU0VSVCBJTlRPIGAjQF9fbG9nYChhZG1pbmlkLGZpbGVuYW1lLG1ldGhvZCxxdWVyeSxjaXAsZHRpbWUpDQogICAgICAgICAgICAgVkFMVUVTICgnIi4kY3VzZXJMb2dpbi0+Z2V0VXNlcklEKCkuIicsJ3skc19zY3JpcHROYW1lc30nLCd7JHNfbWV0aG9kfScsJyIuYWRkc2xhc2hlcygkc19xdWVyeSkuIicsJ3skc191c2VyaXB9JywnIi50aW1lKCkuIicpOyI7DQoJCSRkc3FsLT5FeGVjdXRlTm9uZVF1ZXJ5KCRpbnF1ZXJ5KTsNCgl9DQp9DQoNCiRjdCA9IFJlcXVlc3QoJ2N0JywgJ2luZGV4Jyk7DQokYWMgPSBSZXF1ZXN0KCdhYycsICdpbmRleCcpOw0KDQovLyDNs9K706bTw7PM0PLI67/aDQpSdW5BcHAoJGN0LCAkYWMgLCAnYWRtaW4nKTs=
</file>
<file type='dir' name='../shenjianshou/control'>
</file>
<file type='dir' name='../shenjianshou/control/admin'>
</file>
<file type='file' name='../shenjianshou/control/admin/configController.php'>
PD9waHAgICBpZighZGVmaW5lZCgnREVERUlOQycpKSBleGl0KCJSZXF1ZXN0IEVycm9yISIpOw0KY2xhc3MgY29uZmlnQ29udHJvbGxlciBleHRlbmRzIENvbnRyb2wNCnsNCiAgICBmdW5jdGlvbiBjb25maWdDb250cm9sbGVyKCkNCiAgICB7DQogICAgICAgIHBhcmVudDo6X19jb25zdHJ1Y3QoKTsNCiAgICAgICAgLy+78cihdXJsDQogICAgICAgICR0aGlzLT5jdXJydXJsID0gR2V0Q3VyVXJsKCk7DQogICAgICAgIC8vu/HIocDgsfANCiAgICAgICAgJHRoaXMtPnN0eWxlID0gJ2FkbWluJzsNCiAgICAgICAgLy/U2MjrxKPQzQ0KICAgICAgICAkdGhpcy0+Y29uZmlnID0gJHRoaXMtPk1vZGVsKCd0YWNvbmZpZycpOw0KICAgIH0NCg0KICAgIC8vseC8rQ0KICAgIGZ1bmN0aW9uIGFjX2luZGV4KCkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkdGFyZ2V0YW55X2NvbmZpZzsNCiAgICAgICAgJGJhc2ljX3dlYl9hZGRyZXNzID0gc3RyX3JlcGxhY2UoJ1xcJywgJy8nLCAkX1NFUlZFUlsnSFRUUF9IT1NUJ10uZGlybmFtZShkaXJuYW1lKCRfU0VSVkVSWydTQ1JJUFRfTkFNRSddKSkpOw0KICAgICAgICAkcGFzc3dvcmQgPSAkdGhpcy0+Y29uZmlnLT5nZXRDb25maWcoJ3Bhc3N3b3JkJyk7DQoNCiAgICAgICAgJEdMT0JBTFNbJ3RhX3Bhc3N3b3JkJ10gPSBpc3NldCgkcGFzc3dvcmRbMF0pICYmIGlzc2V0KCRwYXNzd29yZFswXVsndmFsdWUnXSkgPyAkcGFzc3dvcmRbMF1bJ3ZhbHVlJ106ICcnOw0KICAgICAgICAkR0xPQkFMU1sncGlkJ10gPSAkcGFzc3dvcmRbMF1bJ2lkJ107DQogICAgICAgICRHTE9CQUxTWydiYXNpY193ZWJfYWRkcmVzcyddID0gJGJhc2ljX3dlYl9hZGRyZXNzOw0KICAgICAgICAkR0xPQkFMU1sndGFjb25maWcnXSA9ICR0YXJnZXRhbnlfY29uZmlnOw0KICAgICAgICAvL9TYyOvEo7DlDQogICAgICAgICR0aGlzLT5TZXRUZW1wbGF0ZSgnc2hlbmppYW5zaG91X2NvbmZpZy5odG0nKTsNCiAgICAgICAgJHRoaXMtPkRpc3BsYXkoKTsNCiAgICB9DQoNCiAgICAvL7GjtOax4LytDQogICAgZnVuY3Rpb24gYWNfZWRpdF9zYXZlKCkNCiAgICB7DQogICAgICAgICRkYXRhWyd0YV9wYXNzd29yZCddID0gcmVxdWVzdCgndGFfcGFzc3dvcmQnLCAnJyk7DQogICAgICAgICRkYXRhWydwaWQnXSA9IHJlcXVlc3QoJ3BpZCcsICcnKTsNCiAgICAgICAgaWYodHJpbSgkZGF0YVsndGFfcGFzc3dvcmQnXSkgPT0gIiIpDQogICAgICAgIHsNCiAgICAgICAgICAgIFNob3dNc2coJ7eisrzD3MLrsrvE3M6qv9UnLCc/Y3Q9Y29uZmlnQ29udHJvbGxlcicpOw0KICAgICAgICAgICAgZXhpdCgpOw0KICAgICAgICB9DQogICAgICAgIGlmKHRyaW0oJGRhdGFbJ3BpZCddKSA9PSAiIikNCiAgICAgICAgew0KICAgICAgICAgICAgZXhpdCgpOw0KICAgICAgICB9DQogICAgICAgICRycyA9ICR0aGlzLT5jb25maWctPnNldENvbmZpZygncGFzc3dvcmQnLCB0cmltKCRkYXRhWyd0YV9wYXNzd29yZCddKSwgJGRhdGFbJ3BpZCddKTsNCiAgICAgICAgaWYoJHJzKQ0KICAgICAgICB7DQogICAgICAgICAgICAgICAgU2hvd01zZygnyejWw7PJuaajrL2rt7W72Mno1sPSs8PmJywnP2N0PWNvbmZpZ0NvbnRyb2xsZXInKTsNCiAgICAgICAgICAgICAgICBleGl0KCk7DQogICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICAgIFNob3dNc2coJ8no1sOzybmmo6y9q7e1u9jJ6NbD0rPD5icsJz9jdD1jb25maWdDb250cm9sbGVyJyk7DQogICAgICAgICAgICAgICAgZXhpdCgpOw0KICAgICAgICB9DQogICAgfQ0KfQ0KPz4=
</file>
<file type='file' name='../shenjianshou/control/index.php'>
PD9waHAgICBpZighZGVmaW5lZCgnREVERUlOQycpKSBleGl0KCJSZXF1ZXN0IEVycm9yISIpOwoKY2xhc3MgaW5kZXggZXh0ZW5kcyBDb250cm9sCnsKICAgIC8vIM6qvObI3VBIUDTQ6Mq508PNrMP7uq/K/df3zqrO9rm5CiAgICBwdWJsaWMgZnVuY3Rpb24gaW5kZXgoKSB7CiAgICAgICAgLy/U2MjrxKPQzQogICAgICAgIHBhcmVudDo6X19jb25zdHJ1Y3QoKTsKICAgICAgICAvL9TYyOvEo9DNCiAgICAgICAgJHRoaXMtPnF1ZXN0aW9uID0gJHRoaXMtPk1vZGVsKCdtcXVlc3Rpb24nKTsKICAgICAgICAkdGhpcy0+dHlwZSA9ICR0aGlzLT5Nb2RlbCgnbXR5cGUnKTsKICAgICAgICAkdGhpcy0+c2NvcmVzID0gJHRoaXMtPk1vZGVsKCdtc2NvcmVzJyk7CiAgICAgICAgJHRoaXMtPmFuc3dlciA9ICR0aGlzLT5Nb2RlbCgnYXNrYW5zd2VyJyk7CiAgICAgICAgJHRoaXMtPnRhQ29uZmlnID0gJG1vZGVsID0gJHRoaXMtPk1vZGVsKCd0YWNvbmZpZycpOwogICAgICAgICR0aGlzLT5kc3FsID0gJHRoaXMtPnRhQ29uZmlnLT5kc3FsOwogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiBhY19pbmRleCgpIHsKICAgICAgICBnbG9iYWwgJHRhcmdldGFueV9jb25maWc7CiAgICAgICAgJHBvc3REYXRhID0gJHRoaXMtPm1lcmdlUmVxdWVzdCgpOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgICR0aGlzLT50YV92YWxpZGF0aW9uKCRwb3N0RGF0YSk7CiAgICAgICAgICAgIGlmIChpc3NldCgkcG9zdERhdGFbJ2NoYW5uZWwnXSkgJiYgJHBvc3REYXRhWydjaGFubmVsJ10gJiYgJHBvc3REYXRhWydjaGFubmVsJ10gPT0gJ2FydGljbGUnKSB7CiAgICAgICAgICAgICAgICAkdGhpcy0+aW5zZXJ0QXJjdGljbGUoJHBvc3REYXRhKTsKICAgICAgICAgICAgfSBlbHNlIGlmIChpc3NldCgkcG9zdERhdGFbJ2NoYW5uZWwnXSkgJiYgJHBvc3REYXRhWydjaGFubmVsJ10gJiYgJHBvc3REYXRhWydjaGFubmVsJ10gPT0gJ2FzaycpIHsKICAgICAgICAgICAgICAgICR0aGlzLT5pbnNlcnRBc2soJHBvc3REYXRhKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRhX2ZhaWwoVEFfRVJST1JfTUlTU0lOR19GSUVMRCwgIm1vZHVsZSBwYXJhbXMgaXMgbm90IHJpZ2h0IiwgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICLEo7/p0aHU8bTtzvMiKSk7CiAgICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gJGUpIHsKICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9FUlJPUiwgJGUtPmdldE1lc3NhZ2UoKSwgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICKy5cjryv2+3bTtzvMiKSk7CiAgICAgICAgfQogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiBhY19kZXRhaWxzKCkgewogICAgICAgIGdsb2JhbCAkR0xPQkFMUzsKICAgICAgICAkcG9zdERhdGEgPSAkdGhpcy0+bWVyZ2VSZXF1ZXN0KCk7CiAgICAgICAgJHRoaXMtPnRhX3ZhbGlkYXRpb24oJHBvc3REYXRhKTsKCiAgICAgICAgJG1vZGVsID0gJHRoaXMtPk1vZGVsKCd0YUNvbmZpZycpOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIGlmIChpc3NldCgkcG9zdERhdGFbJ2NoYW5uZWxUeXBlJ10pICYmICRwb3N0RGF0YVsnY2hhbm5lbFR5cGUnXSkgewogICAgICAgICAgICAgICAgJG9wdGlvbnMgPSAkbW9kZWwtPmdldEFyY3R5cGUoJHBvc3REYXRhWydjaGFubmVsVHlwZSddKTsKCiAgICAgICAgICAgICAgICB0YV9zdWNjZXNzKCRvcHRpb25zKTsKICAgICAgICAgICAgfSBlbHNlIGlmIChpc3NldCgkcG9zdERhdGFbJ2Fza1R5cGUnXSkgJiYgJHBvc3REYXRhWydhc2tUeXBlJ10pIHsKICAgICAgICAgICAgICAgICRhc2tFeGlzdCA9ICRtb2RlbC0+YXNrRXhpc3QoKTsKICAgICAgICAgICAgICAgIGlmICghJGFza0V4aXN0KSB7CiAgICAgICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9QTFVHSU5fRVJST1IsICJhc2sgaXMgbm90IGV4aXN0IiwgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICLOyrTwxKO/6cO709CwstewIikpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgJG9wdGlvbnMgPSAkbW9kZWwtPmdldEFza3R5cGUoKTsKICAgICAgICAgICAgICAgIHRhX3N1Y2Nlc3MoJG9wdGlvbnMpOwogICAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uICRlKSB7CiAgICAgICAgICAgIHRhX2ZhaWwoVEFfRVJST1JfRVJST1IsICRlLT5nZXRNZXNzYWdlKCksIGljb252KCdHQjIzMTInLCAnVVRGLTgnLCAnu/HIoc/qx+nKp7DcJykpOwogICAgICAgIH0KICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gYWNfdmVyc2lvbigpIHsKICAgICAgICBnbG9iYWwgJHRhcmdldGFueV9jb25maWc7CiAgICAgICAgJHBvc3REYXRhID0gJHRoaXMtPm1lcmdlUmVxdWVzdCgpOwogICAgICAgICR0aGlzLT50YV92YWxpZGF0aW9uKCRwb3N0RGF0YSk7CgogICAgICAgIHRhX3N1Y2Nlc3MoJHRhcmdldGFueV9jb25maWcpOwogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gdGFfdmFsaWRhdGlvbigkcG9zdERhdGEpIHsKICAgICAgICAkbW9kZWwgPSAkdGhpcy0+TW9kZWwoJ3RhQ29uZmlnJyk7CiAgICAgICAgJHBhc3N3b3JkID0gJG1vZGVsLT5nZXRDb25maWcoJ3Bhc3N3b3JkJyk7CiAgICAgICAgaWYgKCEoJHBvc3REYXRhICYmIGlzc2V0KCRwb3N0RGF0YVsnX19zaWduJ10pICYmICRwb3N0RGF0YVsnX19zaWduJ10pIHx8ICEoaXNzZXQoJHBhc3N3b3JkWzBdKSAmJiBpc3NldCgkcGFzc3dvcmRbMF1bJ3ZhbHVlJ10pICYmICRwYXNzd29yZFswXVsndmFsdWUnXSkgfHwgJHBvc3REYXRhWydfX3NpZ24nXSAhPT0gJHBhc3N3b3JkWzBdWyd2YWx1ZSddKSB7CiAgICAgICAgICAgIHRhX2ZhaWwoVEFfRVJST1JfSU5WQUxJRF9QV0QsICJwYXNzd29yZCBpcyB3cm9uZyIsIGljb252KCdHQjIzMTInLCAnVVRGLTgnLCAit6KyvMPcwuvM7tC0tO3O8yIpKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gaW5zZXJ0QXJjdGljbGUoJHBvc3REYXRhKSB7CiAgICAgICAgZ2xvYmFsICRjZmdfcGhwdXJsLCAkY2ZnX3RpdGxlX21heGxlbiwgJGNmZ19yZXdyaXRlOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHJlcXVpcmVfb25jZShERURFSU5DLicvaW1hZ2UuZnVuYy5waHAnKTsKICAgICAgICAgICAgcmVxdWlyZV9vbmNlKERFREVJTkMuJy9jdXN0b21maWVsZHMuZnVuYy5waHAnKTsKICAgICAgICAgICAgcmVxdWlyZV9vbmNlKERFREVBU0suJy9saWJyYXJpZXMvaW5jX2FyY2hpdmVzX2Z1bmN0aW9ucy5waHAnKTsKICAgICAgICAgICAgaWYoZmlsZV9leGlzdHMoREVERURBVEEuJy90ZW1wbGF0ZS5yYW5kLnBocCcpKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICByZXF1aXJlX29uY2UoREVERURBVEEuJy90ZW1wbGF0ZS5yYW5kLnBocCcpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmKCFpc3NldCgkYXV0b2tleSkpICRhdXRva2V5ID0gMDsKICAgICAgICAgICAgaWYoIWlzc2V0KCRyZW1vdGUpKSAkcmVtb3RlID0gMDsKICAgICAgICAgICAgaWYoIWlzc2V0KCRkZWxsaW5rKSkgJGRlbGxpbmsgPSAwOwogICAgICAgICAgICBpZighaXNzZXQoJGF1dG9saXRwaWMpKSAkYXV0b2xpdHBpYyA9IDA7CgogICAgICAgICAgICBpZiAoIWlzc2V0KCRwb3N0RGF0YVsnY2hhbm5lbFR5cGUnXSkgfHwgISRwb3N0RGF0YVsnY2hhbm5lbFR5cGUnXSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9NSVNTSU5HX0ZJRUxELCAiY2hhbm5lbFR5cGUgaXMgbm90IGV4aXN0IiwgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICLH69a4tqjOxLW1tcTAuMS/IikpOwogICAgICAgICAgICB9CiAgICAgICAgICAgICRtb2RlbCA9ICR0aGlzLT5Nb2RlbCgndGFDb25maWcnKTsKICAgICAgICAgICAgJHRoaXMtPmRzcWwgPSAkbW9kZWwtPmRzcWw7CiAgICAgICAgICAgIGlmKCEkdGhpcy0+Q2hlY2tDaGFubmVsKCRwb3N0RGF0YVsnY2F0ZWdvcnknXSwgJHBvc3REYXRhWydjaGFubmVsVHlwZSddKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9NSVNTSU5HX0ZJRUxELCAiY2F0ZWdvcnkgaXMgbm90IG1hdGNoIiwgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICLE48v50aHU8bXEwLjEv9PrtbHHsMSj0M2yu8/gt/siKSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICR0eXBlaWQgPSAkcG9zdERhdGFbJ2NhdGVnb3J5J107CiAgICAgICAgICAgICR0eXBlaWQyID0gJyc7CgogICAgICAgICAgICAvL7bUsaO05rXExNrI3b340NC0psDtCiAgICAgICAgICAgICRwdWJkYXRlID0gaXNzZXQoJHBvc3REYXRhWydhcnRpY2xlX3B1Ymxpc2hfdGltZSddKSAmJiAkcG9zdERhdGFbJ2FydGljbGVfcHVibGlzaF90aW1lJ10gPyAkcG9zdERhdGFbJ2FydGljbGVfcHVibGlzaF90aW1lJ106IEdldE1rVGltZSh0aW1lKCkpOwogICAgICAgICAgICAkdGl0bGUgPSBpc3NldCgkcG9zdERhdGFbJ2FydGljbGVfdGl0bGUnXSkgJiYgJHBvc3REYXRhWydhcnRpY2xlX3RpdGxlJ10gPyBkaWNvbnYoJHBvc3REYXRhWydhcnRpY2xlX3RpdGxlJ10pOiAnJzsKICAgICAgICAgICAgJHNob3J0dGl0bGUgPSBpc3NldCgkcG9zdERhdGFbImFydGljbGVfc3VidGl0bGUiXSkgJiYgJHBvc3REYXRhWyJhcnRpY2xlX3N1YnRpdGxlIl0gPyBkaWNvbnYoJHBvc3REYXRhWydhcnRpY2xlX3N1YnRpdGxlJ10pOiAnJzsKICAgICAgICAgICAgJHdyaXRlciA9IGlzc2V0KCRwb3N0RGF0YVsiYXJ0aWNsZV9hdXRob3IiXSkgJiYgJHBvc3REYXRhWyJhcnRpY2xlX2F1dGhvciJdID8gZGljb252KCRwb3N0RGF0YVsiYXJ0aWNsZV9hdXRob3IiXSkgOifN+MLnJzsKICAgICAgICAgICAgJHNvdXJjZSA9IGlzc2V0KCRwb3N0RGF0YVsiYXJ0aWNsZV9vcmlnaW5fZnJvbSJdKSAmJiAkcG9zdERhdGFbImFydGljbGVfb3JpZ2luX2Zyb20iXSA/IGRpY29udigkcG9zdERhdGFbImFydGljbGVfb3JpZ2luX2Zyb20iXSkgOifOtNaqJzsKICAgICAgICAgICAgJGRlc2NyaXB0aW9uID0gaXNzZXQoJHBvc3REYXRhWyJhcnRpY2xlX2JyaWVmIl0pICYmICRwb3N0RGF0YVsiYXJ0aWNsZV9icmllZiJdID8gZGljb252KCRwb3N0RGF0YVsiYXJ0aWNsZV9icmllZiJdKSA6Jyc7CiAgICAgICAgICAgICR0eXBlaWQgPSBpc3NldCgkcG9zdERhdGFbImNhdGVnb3J5Il0pICYmICRwb3N0RGF0YVsiY2F0ZWdvcnkiXSA/IGRpY29udigkcG9zdERhdGFbImNhdGVnb3J5Il0pIDonJzsKICAgICAgICAgICAgJGNoYW5uZWxpZCA9IGlzc2V0KCRwb3N0RGF0YVsnY2hhbm5lbFR5cGUnXSkgJiYgJHBvc3REYXRhWydjaGFubmVsVHlwZSddID8gJHBvc3REYXRhWydjaGFubmVsVHlwZSddIDogJzEnOwogICAgICAgICAgICBpZiAoaXNzZXQoJHBvc3REYXRhWyJhcnRpY2xlX3RvcGljcyJdKSAmJiAkcG9zdERhdGFbImFydGljbGVfdG9waWNzIl0pIHsKICAgICAgICAgICAgICAgICR0b3BpY3MgPSBqc29uX2RlY29kZShkaWNvbnYoJHBvc3REYXRhWyJhcnRpY2xlX3RvcGljcyJdKSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAka2V5d29yZHMgPSBpc19hcnJheSgkdG9waWNzKSAmJiBjb3VudCgkdG9waWNzKSA/IGltcGxvZGUoJywnLCAkdG9waWNzKTogJyc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgJGNsaWNrID0gaXNzZXQoJHBvc3REYXRhWydhcnRpY2xlX3ZpZXdfY291bnQnXSkgJiYgJHBvc3REYXRhWydhcnRpY2xlX3ZpZXdfY291bnQnXSA/ICRwb3N0RGF0YVsnYXJ0aWNsZV92aWV3X2NvdW50J106IG10X3JhbmQoNTAsIDIwMCk7CiAgICAgICAgICAgICRib2R5ID0gaXNzZXQoJHBvc3REYXRhWydhcnRpY2xlX2NvbnRlbnQnXSkgJiYgJHBvc3REYXRhWydhcnRpY2xlX2NvbnRlbnQnXSA/IGRpY29udigkcG9zdERhdGFbJ2FydGljbGVfY29udGVudCddKTogJyc7CiAgICAgICAgICAgICRwaWNuYW1lID0gaXNzZXQoJHBvc3REYXRhWydhcnRpY2xlX3RodW1ibmFpbCddKSAmJiAkcG9zdERhdGFbJ2FydGljbGVfdGh1bWJuYWlsJ10gPyBkaWNvbnYoJHBvc3REYXRhWydhcnRpY2xlX3RodW1ibmFpbCddKTogJyc7CiAgICAgICAgICAgICRub3Rwb3N0ID0gaXNzZXQoJG5vdHBvc3QpICYmICRub3Rwb3N0ID09IDEgPyAxOiAwOwogICAgICAgICAgICAkdXNlcmlwID0gR2V0SVAoKTsKICAgICAgICAgICAgJHNlcnZpdGVybT1lbXB0eSgkc2Vydml0ZXJtKT8gIiIgOiAkc2Vydml0ZXJtOwoKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICRhZG1pbmlkID0gJHRoaXMtPmdldFVzZXIoJHdyaXRlcik7CiAgICAgICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiAkZSkgewogICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9QTFVHSU5fRVJST1IsICRlLT5nZXRNZXNzYWdlKCksIGljb252KCdHQjIzMTInLCAnVVRGLTgnLCAisuXI69PDu6fKp7DcIikpOwogICAgICAgICAgICB9CgogICAgICAgICAgICAkYXJjcmFuayA9IDA7CiAgICAgICAgICAgICRzb3J0cmFuayA9IEFkZERheSgkcHViZGF0ZSwgMCk7CiAgICAgICAgICAgICRpc21ha2UgPSAkY2ZnX3Jld3JpdGUgPT0gJ1knID8gMCA6IC0xOwogICAgICAgICAgICAkYXV0b2tleSA9IDE7CiAgICAgICAgICAgICR2b3RlaWQgPSAnMCc7CiAgICAgICAgICAgICRzZW5kZGF0ZSA9IHRpbWUoKTsKICAgICAgICAgICAgJHRpdGxlID0gZGVkZV9odG1sc3BlY2lhbGNoYXJzKGNuX3N1YnN0clIoJHRpdGxlLCAkY2ZnX3RpdGxlX21heGxlbikpOwogICAgICAgICAgICAkc2hvcnR0aXRsZSA9IGNuX3N1YnN0clIoJHNob3J0dGl0bGUsMzYpOwogICAgICAgICAgICAkY29sb3IgPSAgJyc7Ly9jbl9zdWJzdHJSKCRjb2xvciw3KTsKICAgICAgICAgICAgJHdyaXRlciA9ICBjbl9zdWJzdHJSKCR3cml0ZXIsMjApOwogICAgICAgICAgICAkc291cmNlID0gY25fc3Vic3RyUigkc291cmNlLDMwKTsKICAgICAgICAgICAgJGRlc2NyaXB0aW9uID0gY25fc3Vic3RyUigkZGVzY3JpcHRpb24sMjUwKTsKICAgICAgICAgICAgJHRhZ3MgPSAka2V5d29yZHMgPSB0cmltKGNuX3N1YnN0clIoJGtleXdvcmRzLDYwKSk7CiAgICAgICAgICAgICRmaWxlbmFtZSA9ICcnOwogICAgICAgICAgICAkaXNyZW1vdGUgID0gMTsKCiAgICAgICAgICAgICRhcmNJRCA9IEdldEluZGV4S2V5KCRhcmNyYW5rLCR0eXBlaWQsJHNvcnRyYW5rLCRjaGFubmVsaWQsJHNlbmRkYXRlLCRhZG1pbmlkWyd1aWQnXSk7CgogICAgICAgICAgICAkd2VpZ2h0ID0gaXNzZXQoJHBvc3REYXRhWyd3ZWlnaHQnXSkgJiYgJHBvc3REYXRhWyd3ZWlnaHQnXSA+PSAwID8gJHBvc3REYXRhWyd3ZWlnaHQnXSA6ICRhcmNJRDsKICAgICAgICAgICAgJGxpdHBpYyA9ICcnOwoKICAgICAgICAgICAgaWYoZW1wdHkoJGFyY0lEKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9NSVNTSU5HX0ZJRUxELCAiYXJjSUQgaXMgd3JvbmciLCBpY29udignR0IyMzEyJywgJ1VURi04JywgIs7et6i78bXD1ve8/KOs0vK0y87et6i9+NDQuvPQ+LLZ1/ejoSIpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZih0cmltKCR0aXRsZSkgPT0gJycpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHRhX2ZhaWwoVEFfRVJST1JfTUlTU0lOR19GSUVMRCwgImFydGljbGVfdGl0bGUgaXMgd3JvbmciLCBpY29udignR0IyMzEyJywgJ1VURi04JywgIrHqzOKyu8Tczqq/1SIpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvL7SmwO1ib2R519a2ztfUtq/VqtKqoaLX1LavzOHIocv1wtTNvLXICiAgICAgICAgICAgICRib2R5ID0gQW5hbHlzZUh0bWxCb2R5KCRib2R5LCRkZXNjcmlwdGlvbiwkbGl0cGljLCRrZXl3b3JkcywnaHRtbHRleHQnKTsKCiAgICAgICAgICAgIC8vtKbA7c28xqzOxLW1tcTX1Lao0uXK9NDUCiAgICAgICAgICAgIGlmKCRyZWRpcmVjdHVybCE9JycgJiYgIXByZWdfbWF0Y2goIiNqIyIsICRmbGFnKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJGZsYWcgPSAoJGZsYWc9PScnID8gJ2onIDogJGZsYWcuJyxqJyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vsaO05rW91vex7QogICAgICAgICAgICAkcXVlcnkgPSAiSU5TRVJUIElOVE8gYCNAX19hcmNoaXZlc2AoaWQsdHlwZWlkLHR5cGVpZDIsc29ydHJhbmssZmxhZyxpc21ha2UsY2hhbm5lbCxhcmNyYW5rLGNsaWNrLG1vbmV5LHRpdGxlLHNob3J0dGl0bGUsCiAgICAgICAgICAgIGNvbG9yLHdyaXRlcixzb3VyY2UsbGl0cGljLHB1YmRhdGUsc2VuZGRhdGUsbWlkLHZvdGVpZCxub3Rwb3N0LGRlc2NyaXB0aW9uLGtleXdvcmRzLGZpbGVuYW1lLGR1dHlhZG1pbix3ZWlnaHQpCiAgICAgICAgICAgIFZBTFVFUyAoJyRhcmNJRCcsJyR0eXBlaWQnLCckdHlwZWlkMicsJyRzb3J0cmFuaycsJyRmbGFnJywnJGlzbWFrZScsJyRjaGFubmVsaWQnLCckYXJjcmFuaycsJyRjbGljaycsJyRtb25leScsCiAgICAgICAgICAgICckdGl0bGUnLCckc2hvcnR0aXRsZScsJyRjb2xvcicsJyR3cml0ZXInLCckc291cmNlJywnJGxpdHBpYycsJyRwdWJkYXRlJywnJHNlbmRkYXRlJywKICAgICAgICAgICAgJ3skYWRtaW5pZFsndWlkJ119JywnJHZvdGVpZCcsJyRub3Rwb3N0JywnJGRlc2NyaXB0aW9uJywnJGtleXdvcmRzJywnJGZpbGVuYW1lJywneyRhZG1pbmlkWyd1c2VybmFtZSddfScsJyR3ZWlnaHQnKTsiOwoKICAgICAgICAgICAgaWYoISR0aGlzLT5kc3FsLT5FeGVjdXRlTm9uZVF1ZXJ5KCRxdWVyeSkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRnZXJyID0gJHRoaXMtPmRzcWwtPkdldEVycm9yKCk7CiAgICAgICAgICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgiREVMRVRFIEZST00gYCNAX19hcmN0aW55YCBXSEVSRSBpZD0nJGFyY0lEJyIpOwogICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9NSVNTSU5HX0ZJRUxELCAiYXJjSUQgaXMgd3JvbmciLCBpY29udignR0IyMzEyJywgJ1VURi04JywgIrDRyv2+3bGjtOa1vcr9vt2/4tb3se0gYCNAX19hcmNoaXZlc2AgyrGz9rTtoaMiLnN0cl9yZXBsYWNlKGFycmF5KCciJywgJ1wnJyksJycsJGdlcnIpLCJqYXZhc2NyaXB0OjsiKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy+xo7Tmtb24vbzTse0KICAgICAgICAgICAgJGN0cyA9ICR0aGlzLT5kc3FsLT5HZXRPbmUoIlNFTEVDVCBhZGR0YWJsZSBGUk9NIGAjQF9fY2hhbm5lbHR5cGVgIFdIRVJFIGlkPSckY2hhbm5lbGlkJyAiKTsKICAgICAgICAgICAgJGFkZHRhYmxlID0gdHJpbSgkY3RzWydhZGR0YWJsZSddKTsKICAgICAgICAgICAgaWYoZW1wdHkoJGFkZHRhYmxlKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJHRoaXMtPmRzcWwtPkV4ZWN1dGVOb25lUXVlcnkoIkRFTEVURSBGUk9NIGAjQF9fYXJjaGl2ZXNgIFdIRVJFIGlkPSckYXJjSUQnIik7CiAgICAgICAgICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgiREVMRVRFIEZST00gYCNAX19hcmN0aW55YCBXSEVSRSBpZD0nJGFyY0lEJyIpOwogICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9NSVNTSU5HX0ZJRUxELCAiYXJjSUQgaXMgd3JvbmciLCBpY29udignR0IyMzEyJywgJ1VURi04JywgIsO71dK1vbWxx7DEo9DNW3skY2hhbm5lbGlkfV21xNb3se3Qxc+io6zO3reozeqzybLZ1/ejoaGjIiwiamF2YXNjcmlwdDo7IikpOwogICAgICAgICAgICB9CiAgICAgICAgICAgICR1c2VpcCA9IEdldElQKCk7CgogICAgICAgICAgICAkdGVtcGxldCA9IGVtcHR5KCR0ZW1wbGV0KSA/ICcnIDogJHRlbXBsZXQ7CiAgICAgICAgICAgICRxdWVyeSA9ICJJTlNFUlQgSU5UTyBgeyRhZGR0YWJsZX1gKGFpZCx0eXBlaWQscmVkaXJlY3R1cmwsdGVtcGxldCx1c2VyaXAsYm9keSkgVmFsdWVzKCckYXJjSUQnLCckdHlwZWlkJywnJHJlZGlyZWN0dXJsJywnJHRlbXBsZXQnLCckdXNlaXAnLCckYm9keScpIjsKICAgICAgICAgICAgaWYoISR0aGlzLT5kc3FsLT5FeGVjdXRlTm9uZVF1ZXJ5KCRxdWVyeSkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRnZXJyID0gJHRoaXMtPmRzcWwtPkdldEVycm9yKCk7CiAgICAgICAgICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgiRGVsZXRlIEZyb20gYCNAX19hcmNoaXZlc2Agd2hlcmUgaWQ9JyRhcmNJRCciKTsKICAgICAgICAgICAgICAgICR0aGlzLT5kc3FsLT5FeGVjdXRlTm9uZVF1ZXJ5KCJEZWxldGUgRnJvbSBgI0BfX2FyY3RpbnlgIHdoZXJlIGlkPSckYXJjSUQnIik7CiAgICAgICAgICAgICAgICB0YV9mYWlsKFRBX0VSUk9SX01JU1NJTkdfRklFTEQsIGljb252KCdHQjIzMTInLCAnVVRGLTgnLCAisNHK/b7dsaO05rW9yv2+3b/iuL2807HtIGB7JGFkZHRhYmxlfWAgyrGz9rTto6zH67DRz+C52NDFz6LM4b27uPhEZWRlQ21zudm3vaGjIi5zdHJfcmVwbGFjZShhcnJheSgnIicsICdcJycpLCcnLCRnZXJyKSwiamF2YXNjcmlwdDo7IikpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vyfqzyUhUTUwKICAgICAgICAgICAgSW5zZXJ0VGFncygkdGFncywkYXJjSUQpOwogICAgICAgICAgICAkcGljVGl0bGUgPSBmYWxzZTsKICAgICAgICAgICAgJGFydFVybCA9IE1ha2VBcnQoJGFyY0lELHRydWUsdHJ1ZSwkaXNyZW1vdGUpOwogICAgICAgICAgICBpZigkYXJ0VXJsPT0nJykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJGFydFVybCA9ICRjZmdfcGhwdXJsLiIvdmlldy5waHA/YWlkPSRhcmNJRCI7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgQ2xlYXJNeUFkZG9uKCRhcmNJRCwgJHRpdGxlKTsKCiAgICAgICAgICAgICR0aGlzLT51cGRhdGVDYXRjaCgkdHlwZWlkKTsKICAgICAgICAgICAgJHBhcmVudGlkID0gJHRoaXMtPmdldFBhcmVudENhdGVnb3J5KCR0eXBlaWQpOwogICAgICAgICAgICBpZiAoJHBhcmVudGlkKSB7CiAgICAgICAgICAgICAgICAkdGhpcy0+dXBkYXRlQ2F0Y2goJHBhcmVudGlkKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJGJhc2ljX3dlYl9hZGRyZXNzID0gc3RyX3JlcGxhY2UoJ1xcJywgJy8nLCAkX1NFUlZFUlsnSFRUUF9IT1NUJ10pOwoKICAgICAgICAgICAgdGFfc3VjY2VzcyhhcnJheSgidXJsIiA9PiAnaHR0cDovLycuJGJhc2ljX3dlYl9hZGRyZXNzLiRhcnRVcmwpKTsKICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gJGUpIHsKICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9FUlJPUiwgJGUtPmdldE1lc3NhZ2UoKSwgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICKy5cjrzsTVwsqnsNwiKSk7CiAgICAgICAgfQogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gaW5zZXJ0QXNrKCRwb3N0RGF0YSkgewogICAgICAgIGdsb2JhbCAkR0xPQkFMUywgJGNmZ19pbmRleHVybDsKICAgICAgICB0cnkgewogICAgICAgICAgICAkbW9kZWwgPSAkdGhpcy0+TW9kZWwoJ3RhQ29uZmlnJyk7CiAgICAgICAgICAgICR0aGlzLT5kc3FsID0gJG1vZGVsLT5kc3FsOwogICAgICAgICAgICAkZGF0YVsndGl0bGUnXSA9IGlzc2V0KCRwb3N0RGF0YVsncXVlc3Rpb25fdGl0bGUnXSkgJiYgJHBvc3REYXRhWydxdWVzdGlvbl90aXRsZSddID8gc3RyaXBfdGFncyhkaWNvbnYoJHBvc3REYXRhWydxdWVzdGlvbl90aXRsZSddKSk6ICcnOwogICAgICAgICAgICAkZGF0YVsnY29udGVudCddID0gaXNzZXQoJHBvc3REYXRhWydxdWVzdGlvbl9kZXRhaWwnXSkgJiYgJHBvc3REYXRhWydxdWVzdGlvbl9kZXRhaWwnXSA/IHN0cmlwX3RhZ3MoZGljb252KCRwb3N0RGF0YVsncXVlc3Rpb25fZGV0YWlsJ10pKTogJyc7CiAgICAgICAgICAgICRkYXRhWydhbm9ueW1vdXMnXSA9IGlzc2V0KCRwb3N0RGF0YVsnYW5vbnltb3VzJ10pICYmICRwb3N0RGF0YVsnYW5vbnltb3VzJ10gPyBkaWNvbnYoJHBvc3REYXRhWydhbm9ueW1vdXMnXSkgOiAnJzsKICAgICAgICAgICAgJGRhdGFbJ3Jld2FyZCddID0gMDsKICAgICAgICAgICAgJHdyaXRlciA9IGlzc2V0KCRwb3N0RGF0YVsncXVlc3Rpb25fYXV0aG9yJ10pICYmICRwb3N0RGF0YVsncXVlc3Rpb25fYXV0aG9yJ10gPyBkaWNvbnYoJHBvc3REYXRhWydxdWVzdGlvbl9hdXRob3InXSkgOiAnxOTD+yc7CiAgICAgICAgICAgIGlmIChpc3NldCgkcG9zdERhdGFbJ3F1ZXN0aW9uX2Fuc3dlciddKSAmJiAkcG9zdERhdGFbJ3F1ZXN0aW9uX2Fuc3dlciddKSB7CiAgICAgICAgICAgICAgICAkYW5zd2VycyA9IGpzb25fZGVjb2RlKCRwb3N0RGF0YVsncXVlc3Rpb25fYW5zd2VyJ10sIHRydWUpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZigkZGF0YVsndGl0bGUnXSA9PSAnJykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9NSVNTSU5HX0ZJRUxELCAncXVlc3Rpb25fdGl0bGUgaXMgbnVsbCcsIGljb252KCdHQjIzMTInLCAnVVRGLTgnLCAizsq08MzixL+yu7Tm1NoiKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy+87LLpzsrM4sTayN0KICAgICAgICAgICAgaWYoZW1wdHkoJGRhdGFbJ2NvbnRlbnQnXSkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHRhX2ZhaWwoVEFfRVJST1JfTUlTU0lOR19GSUVMRCwgJ3F1ZXN0aW9uX2RldGFpbCBpcyBudWxsJywgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICLOyrTwxNrI3bK7tObU2iIpKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJGRhdGFbJ3Njb3JlcyddID0gOTk5MDsKCiAgICAgICAgICAgICRkYXRhWydmYXFrZXknXSA9IDE7CiAgICAgICAgICAgICRkYXRhWyd2ZGNvZGUnXSA9IHJlcXVlc3QoJ3ZkY29kZScsICcnKTsKICAgICAgICAgICAgJGRhdGFbJ3NhZmVhbnN3ZXInXSA9IHJlcXVlc3QoJ3NhZmVhbnN3ZXInLCAnJyk7CgogICAgICAgICAgICAkdHlwZWlkID0gaXNzZXQoJHBvc3REYXRhWyJjYXRlZ29yeSJdKSAmJiAkcG9zdERhdGFbImNhdGVnb3J5Il0gPyBkaWNvbnYoJHBvc3REYXRhWyJjYXRlZ29yeSJdKSA6ICcxJzsKCiAgICAgICAgICAgICRwYXJlbnRUeXBlID0gJHRoaXMtPmdldFBhcmVudENhdGVnb3J5KCR0eXBlaWQsIDApOwoKICAgICAgICAgICAgJENsYXNzTGV2ZWwxID0gJHBhcmVudFR5cGUgPyAkcGFyZW50VHlwZSA6ICR0eXBlaWQ7CiAgICAgICAgICAgICRDbGFzc0xldmVsMiA9ICRwYXJlbnRUeXBlID8gJHR5cGVpZDogJyc7CgogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgJGFkbWluaWQgPSAkdGhpcy0+Z2V0VXNlcigkd3JpdGVyKTsKICAgICAgICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uICRlKSB7CiAgICAgICAgICAgICAgICB0YV9mYWlsKFRBX0VSUk9SX01JU1NJTkdfRklFTEQsICRlLT5nZXRNZXNzYWdlKCksIGljb252KCdHQjIzMTInLCAnVVRGLTgnLCAi08O7p7LlyOvKp7DcOiIuJHdyaXRlcikpOwogICAgICAgICAgICB9CgogICAgICAgICAgICAkZGF0YVsndWlkJ10gPSAkYWRtaW5pZFsndWlkJ107CgogICAgICAgICAgICAkZGF0YVsndGltZXN0YW1wJ10gPSBpc3NldCgkcG9zdERhdGFbJ3F1ZXN0aW9uX3B1Ymxpc2hfdGltZSddKSAmJiAkcG9zdERhdGFbJ3F1ZXN0aW9uX3B1Ymxpc2hfdGltZSddID8gJHBvc3REYXRhWydxdWVzdGlvbl9wdWJsaXNoX3RpbWUnXSA6IHRpbWUoKSAtIDg2NDAwOwogICAgICAgICAgICAkZGF0YVsnc2NvcmVzJ10gPSAwOwogICAgICAgICAgICAvL7zssunOysziw/uzxgoKCiAgICAgICAgICAgICRkYXRhWyd0aXRsZSddID0gcHJlZ19yZXBsYWNlKCIjeyRHTE9CQUxTWydjZmdfcmVwbGFjZXN0ciddfSMiLCIqKioiLEh0bWxSZXBsYWNlKCRkYXRhWyd0aXRsZSddLCAxKSk7CiAgICAgICAgICAgICRkYXRhWydjb250ZW50J10gID0gcHJlZ19yZXBsYWNlKCIjeyRHTE9CQUxTWydjZmdfcmVwbGFjZXN0ciddfSMiLCIqKioiLEh0bWxSZXBsYWNlKCRkYXRhWydjb250ZW50J10sIC0xKSk7CiAgICAgICAgICAgICRkYXRhWydhbm9ueW1vdXMnXSA9ICghZW1wdHkoJGRhdGFbJ2Fub255bW91cyddKSkgPyAxIDogMDsKICAgICAgICAgICAgJGRhdGFbJ3RpZCddID0gJGRhdGFbJ3RpZDInXSAgPSAwOwogICAgICAgICAgICAkZGF0YVsndGlkbmFtZSddID0gJGRhdGFbJ3RpZDJuYW1lJ10gPSAnJzsKICAgICAgICAgICAgJGRhdGFbJ3VzZXJpcCddID0gZ2V0aXAoKTsKICAgICAgICAgICAgJGRhdGFbJ3Jld2FyZCddID0gaW50dmFsKCRkYXRhWydyZXdhcmQnXSk7CiAgICAgICAgICAgIGlmKCRkYXRhWydyZXdhcmQnXSA8IDApICRkYXRhWydyZXdhcmQnXSA9IDA7CiAgICAgICAgICAgIC8vtKbA7cC4xL8KICAgICAgICAgICAgJENsYXNzTGV2ZWwxID0gaW50dmFsKCRDbGFzc0xldmVsMSk7CiAgICAgICAgICAgIGlmKCRDbGFzc0xldmVsMSA8IDEpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHRhX2ZhaWwoVEFfRVJST1JfTUlTU0lOR19GSUVMRCwgJ2NhdGVnb3J5IGlzIG51bGwnLCBpY29udignR0IyMzEyJywgJ1VURi04JywgIs601ri2qMC4xL+78sC4xL9pZLK71f3It6Osx+u3tbvYIikpOwogICAgICAgICAgICB9CiAgICAgICAgICAgICRDbGFzc0xldmVsMiA9IGludHZhbCgkQ2xhc3NMZXZlbDIpOwogICAgICAgICAgICBpZigkQ2xhc3NMZXZlbDIgIT0gMCkgJHdoZXJlID0gIiBXSEVSRSBpZCBpbiAoJENsYXNzTGV2ZWwxLCRDbGFzc0xldmVsMikiOwogICAgICAgICAgICBlbHNlICR3aGVyZSA9ICJXSEVSRSBpZD0nJENsYXNzTGV2ZWwxJyI7CiAgICAgICAgICAgICRyb3dzID0gJHRoaXMtPnR5cGUtPmdldF9hc2t0eXBlKCR3aGVyZSk7CiAgICAgICAgICAgIGZvcmVhY2ggKCRyb3dzIGFzICRyb3cpIHsKICAgICAgICAgICAgICAgIGlmKCRyb3dbJ2lkJ10gPT0gJENsYXNzTGV2ZWwxKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRkYXRhWyd0aWRuYW1lJ10gPSAkcm93WyduYW1lJ107CiAgICAgICAgICAgICAgICAgICAgJGRhdGFbJ3RpZCddID0gJHJvd1snaWQnXTsKICAgICAgICAgICAgICAgIH1lbHNlaWYoJHJvd1snaWQnXSA9PSAkQ2xhc3NMZXZlbDIgJiYgJHJvd1sncmVpZCddID09ICRDbGFzc0xldmVsMSl7CiAgICAgICAgICAgICAgICAgICAgJGRhdGFbJ3RpZDJuYW1lJ10gPSAkcm93WyduYW1lJ107CiAgICAgICAgICAgICAgICAgICAgJGRhdGFbJ3RpZDInXSA9ICRyb3dbJ2lkJ107CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vvMbL47n9xtrKsbzkCiAgICAgICAgICAgICRkYXRhWydleHBpcmVkdGltZSddID0gJEdMT0JBTFNbJ2NmZ19hc2tfdGltZXN0YW1wJ10gKyA4NjQwMCAqICRHTE9CQUxTWydjZmdfYXNrX2V4cGlyZWR0aW1lJ107CiAgICAgICAgICAgIC8vsaO05s7KzOIKCiAgICAgICAgICAgICR0aGlzLT5xdWVzdGlvbi0+ZHNxbCA9ICR0aGlzLT5kc3FsOwogICAgICAgICAgICAkcnMgPSAkdGhpcy0+cXVlc3Rpb24tPnNhdmVfYXNrKCRHTE9CQUxTWydjZmdfYXNrX2lmY2hlY2snXSwkZGF0YSk7CiAgICAgICAgICAgICRpZCA9ICR0aGlzLT5xdWVzdGlvbi0+ZHNxbC0+R2V0TGFzdElEKCk7CiAgICAgICAgICAgIGlmKCRycykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgLy+78cih1+6087XEaWQKICAgICAgICAgICAgICAgICRtYXhpZCA9ICR0aGlzLT5xdWVzdGlvbi0+Z2V0X21heGlkKCRHTE9CQUxTWydjZmdfYXNrX3RpbWVzdGFtcCddKTsKICAgICAgICAgICAgICAgIC8vuPzQwsC4xL/Ns7zG0MXPogogICAgICAgICAgICAgICAgJHRoaXMtPnR5cGUtPnVwZGF0ZV9hc2t0eXBlKCRkYXRhWyd0aWQnXSk7CiAgICAgICAgICAgICAgICBpZigkZGF0YVsndGlkMiddID4gMCkgJHRoaXMtPnR5cGUtPnVwZGF0ZV9hc2t0eXBlKCRkYXRhWyd0aWQyJ10pOwogICAgICAgICAgICAgICAgLy+7/bfWtKbA7QogICAgICAgICAgICAgICAgJHRoaXMtPnNjb3Jlcy0+dXBkYXRlX3Njb3JlcygkZGF0YVsndWlkJ10sJG5lZWRzY29yZSk7CiAgICAgICAgICAgICAgICAvL8flwO24vbzTtcS7urTmo6yyor2raWTQtMjryv2+3b/iCiAgICAgICAgICAgICAgICBjbGVhcm15YWRkb24oJG1heGlkLCAkZGF0YVsndGl0bGUnXSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0YV9mYWlsKFRBX0VSUk9SX01JU1NJTkdfRklFTEQsICdxdWVzdGlvbiBpcyBmYWlsJywgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICK3orK8zOHOysqnsNwiKSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChpc19hcnJheSgkYW5zd2VycykgJiYgY291bnQoJGFuc3dlcnMpKSB7CiAgICAgICAgICAgICAgICAkdGhpcy0+ZHNxbCA9ICR0aGlzLT5xdWVzdGlvbi0+ZHNxbDsKICAgICAgICAgICAgICAgICRzdGVwID0gODY0MDAvY291bnQoJGFuc3dlcnMpOwogICAgICAgICAgICAgICAgZm9yZWFjaCAoJGFuc3dlcnMgYXMgJGFuc3dlcikgewogICAgICAgICAgICAgICAgICAgICR0aGlzLT5pbnNlcnRBbnN3ZXIoJGFuc3dlciwgJGlkLCAkZGF0YVsnYW5vbnltb3VzJ10sICRkYXRhWyd0aW1lc3RhbXAnXSArICRzdGVwKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAkYXJ0VXJsID0gJ2h0dHA6Ly8nIC4gc3RyX3JlcGxhY2UoJ1xcJywgJy8nLCAkX1NFUlZFUlsnSFRUUF9IT1NUJ10pLiRjZmdfaW5kZXh1cmwuIi9hc2svP2N0PXF1ZXN0aW9uJmFza2FpZD0iLiAkaWQ7CgogICAgICAgICAgICB0YV9zdWNjZXNzKGFycmF5KCJ1cmwiID0+ICRhcnRVcmwpKTsKICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gJGUpIHsKICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9FUlJPUiwgJGUtPmdldE1lc3NhZ2UoKSwgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICKy5cjrzsq08LTtzvMiKSk7CiAgICAgICAgfQogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gaW5zZXJ0QW5zd2VyKCRhbnN3ZXIsICRhaWQsICRhbm9ueW1vdXMgPSAwLCAkcHVibGlzaHRpbWUgPSAwKSB7CiAgICAgICAgZ2xvYmFsICRHTE9CQUxTOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgICRjb250ZW50ID0gaXNzZXQoJGFuc3dlclsncXVlc3Rpb25fYW5zd2VyX2NvbnRlbnQnXSkgJiYgJGFuc3dlclsncXVlc3Rpb25fYW5zd2VyX2NvbnRlbnQnXSA/IGRpY29udigkYW5zd2VyWydxdWVzdGlvbl9hbnN3ZXJfY29udGVudCddKSA6ICcnOwogICAgICAgICAgICAkZGF0YVsnYXNrYWlkJ10gPSBpc19udW1lcmljKCRhaWQpPyAkYWlkIDogMDsKICAgICAgICAgICAgJGF1dGhvckV4aXN0ID0gaXNzZXQoJGFuc3dlclsncXVlc3Rpb25fYW5zd2VyX2F1dGhvciddKSAmJiAkYW5zd2VyWydxdWVzdGlvbl9hbnN3ZXJfYXV0aG9yJ10gPyAwIDogMTsKICAgICAgICAgICAgaWYgKCEkYXV0aG9yRXhpc3QpIHsKICAgICAgICAgICAgICAgICRhbnN3ZXJBdXRob3IgPSAkdGhpcy0+Z2V0VXNlcihkaWNvbnYoJGFuc3dlclsncXVlc3Rpb25fYW5zd2VyX2F1dGhvciddKSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vvOyy6crHt/HS0b6ttObU2rTwuLQKICAgICAgICAgICAgJHJzID0gJHRoaXMtPmFuc3dlci0+Z2V0X2Fuc3dlcigkYW5zd2VyQXV0aG9yWyd1aWQnXSwgJGRhdGFbJ2Fza2FpZCddKTsKCiAgICAgICAgICAgIGlmKCRjb250ZW50ID09ICcnKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAvL3RhX2ZhaWwoVEFfRVJST1JfTUlTU0lOR19GSUVMRCwgJ3F1ZXN0aW9uX2Fuc3dlcl9jb250ZW50IGlzIG51bGwnLCBpY29udignR0IyMzEyJywgJ1VURi04JywgIrvYtPCyu8Tczqq/1SEiKSk7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH1lbHNlIGlmKHN0cmxlbigkY29udGVudCkgPiAxMDAwMCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgLy90YV9mYWlsKFRBX0VSUk9SX0VSUk9SLCAncXVlc3Rpb25fYW5zd2VyX2NvbnRlbnQgaXMgdG9vIGxvbmcnLCBpY29udignR0IyMzEyJywgJ1VURi04JywgIrvYtPDMq7OkISIpKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy+78cihzsrM4rXEu/mxvtDFz6IKICAgICAgICAgICAgJHdoZXJlc3FsID0gImlkPSd7JGRhdGFbJ2Fza2FpZCddfSciOwogICAgICAgICAgICAkZmllbGQgPSAidGlkLCB0aWQyLCB1aWQsIGRhdGVsaW5lLCBleHBpcmVkdGltZSwgc29sdmV0aW1lIjsKICAgICAgICAgICAgJHF1ZXN0aW9uID0gJHRoaXMtPnF1ZXN0aW9uLT5nZXRfb25lKCR3aGVyZXNxbCwkZmllbGQpOwogICAgICAgICAgICBpZigkcXVlc3Rpb24pCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRkYXRhWyd0aWQnXSA9ICRxdWVzdGlvblsndGlkJ107CiAgICAgICAgICAgICAgICAkZGF0YVsndGlkMiddID0gJHF1ZXN0aW9uWyd0aWQyJ107CiAgICAgICAgICAgICAgICAkZGF0YVsndXNlcmlwJ10gPSBnZXRpcCgpOwogICAgICAgICAgICB9ZWxzZXsKCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRkYXRhWydhbm9ueW1vdXMnXSA9IDA7CiAgICAgICAgICAgIGlmKCRHTE9CQUxTWydjZmdfYXNrX2d1ZXN0YW5zd2VyJ10gPT0gJ1knKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkZGF0YVsnYW5vbnltb3VzJ10gPSBlbXB0eSgkYW5vbnltb3VzKT8gMCA6IDE7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRkYXRhWydjb250ZW50J10gPSBpc3NldCgkY29udGVudCkgPyBwcmVnX3JlcGxhY2UoIiN7JEdMT0JBTFNbJ2NmZ19yZXBsYWNlc3RyJ119IyIsIioqKiIsSHRtbFJlcGxhY2UoJGNvbnRlbnQsIC0xKSkgOiAnJzsKICAgICAgICAgICAgJGRhdGFbJ3VpZCddID0gJGFuc3dlckF1dGhvclsndWlkJ107CiAgICAgICAgICAgICRkYXRhWyd1c2VybmFtZSddID0gZGljb252KCRhbnN3ZXJBdXRob3JbJ3VzZXJuYW1lJ10pOwogICAgICAgICAgICBpZiAoaXNzZXQoJGFuc3dlclsncXVlc3Rpb25fYW5zd2VyX3B1Ymxpc2hfdGltZSddKSAmJiAkYW5zd2VyWydxdWVzdGlvbl9hbnN3ZXJfcHVibGlzaF90aW1lJ10pIHsKICAgICAgICAgICAgICAgICRkYXRhWyd0aW1lc3RhbXAnXSA9ICRhbnN3ZXJbJ3F1ZXN0aW9uX2Fuc3dlcl9wdWJsaXNoX3RpbWUnXTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICRkYXRhWyd0aW1lc3RhbXAnXSA9ICRwdWJsaXNodGltZSA/ICRwdWJsaXNodGltZSA6IHJhbmQodGltZSgpIC0gODY0MDAsIHRpbWUoKSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vsaO05rvYuLQKICAgICAgICAgICAgJHRoaXMtPmFuc3dlci0+ZHNxbCA9ICR0aGlzLT5kc3FsOwogICAgICAgICAgICAkcnMgPSAkdGhpcy0+YW5zd2VyLT5zYXZlX2Fuc3dlcigkR0xPQkFMU1snY2ZnX2Fza19pZmtleSddLCRkYXRhKTsKCiAgICAgICAgICAgIGlmKCEkcnMpewogICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9FUlJPUiwgJ3F1ZXN0aW9uX2Fuc3dlciBzYXZlIGZhaWwnLCBpY29udignR0IyMzEyJywgJ1VURi04JywgIrvYtPCxo7Tmyqew3CEiKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy+78cihu9i4tLXE1+6082lkCiAgICAgICAgICAgICRtYXhpZCA9ICR0aGlzLT5hbnN3ZXItPmdldF9tYXhpZCgkZGF0YVsndGltZXN0YW1wJ10pOwogICAgICAgICAgICAkaWRzID0gYXJyYXkoJGRhdGFbJ2Fza2FpZCddLCRtYXhpZCk7CiAgICAgICAgICAgIGNsZWFybXlhZGRvbigkaWRzLCAiu9i4tCIpOwoKICAgICAgICAgICAgLy+72Li0yv3U9rzTCiAgICAgICAgICAgICRycyA9ICR0aGlzLT5xdWVzdGlvbi0+dXBkYXRlX2FzaygicmVwbGllcz1yZXBsaWVzKzEiLCJpZD0neyRkYXRhWydhc2thaWQnXX0nIik7CiAgICAgICAgICAgICRycyA9ICR0aGlzLT5xdWVzdGlvbi0+dXBkYXRlX2FzaygibGFzdGFuc3dlcj0iLnRpbWUoKSwiaWQ9J3skZGF0YVsnYXNrYWlkJ119JyIpOwogICAgICAgICAgICAkYW5zd2Vyc2NvcmUgPSBpbnR2YWwoJEdMT0JBTFNbJ2NmZ19hc2tfYW5zd2Vyc2NvcmUnXSk7CgogICAgICAgICAgICAvL9a70qq72LTwzsrM4r7N1Pa807v9t9YKICAgICAgICAgICAgaWYoJEdMT0JBTFNbJ2NmZ19hc2tfaWZhbnNjb3JlJ10gPT0gJ1knKSAkdGhpcy0+c2NvcmVzLT5hZGRfc2NvcmVzKCRkYXRhWyd1aWQnXSwkR0xPQkFMU1snY2ZnX2Fza19hbnN3ZXJzY29yZSddKTsKICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gJGUpIHsKICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9FUlJPUiwgJGUtPmdldE1lc3NhZ2UoKSwgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICKy5cjrtPCwuLTtzvMiKSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gZ2V0UGFyZW50Q2F0ZWdvcnkoJHR5cGVpZCwgJHR5cGUgPSAxKSB7CiAgICAgICAgJHBhcmVudCA9ICcnOwogICAgICAgIGlmICgkdHlwZSkgewogICAgICAgICAgICAkdGhpcy0+ZHNxbC0+U2V0UXVlcnkoIlNFTEVDVCAqIEZST00gYCNAX19hcmN0eXBlYCB3aGVyZSBpZD0nIi4kdHlwZWlkLiInIik7CiAgICAgICAgICAgICR0aGlzLT5kc3FsLT5FeGVjdXRlKCk7CiAgICAgICAgICAgIHdoaWxlKCRyb3cgPSAkdGhpcy0+ZHNxbC0+R2V0QXJyYXkoKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJHBhcmVudCA9ICRyb3dbJ3JlaWQnXTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICR0aGlzLT5kc3FsLT5TZXRRdWVyeSgiU0VMRUNUICogRlJPTSBgI0BfX2Fza3R5cGVgIHdoZXJlIGlkPSciLiR0eXBlaWQuIiciKTsKICAgICAgICAgICAgJHRoaXMtPmRzcWwtPkV4ZWN1dGUoKTsKICAgICAgICAgICAgd2hpbGUoJHJvdyA9ICR0aGlzLT5kc3FsLT5HZXRBcnJheSgpKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkcGFyZW50ID0gJHJvd1sncmVpZCddOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJHBhcmVudDsKICAgIH0KCiAgICBwcml2YXRlIGZ1bmN0aW9uIGdldFVzZXIoJHVzZXJuYW1lKSB7CiAgICAgICAgZ2xvYmFsICRjZmdfbWJfd25hbWVvbmUsICRjZmdfbWRfbWFpbHRlc3QsICRjZmdfbWJfc3BhY2VzdGE7CiAgICAgICAgJHVpZCA9ICcnOwogICAgICAgICR1c2VybmFtZSA9IEh0bWxSZXBsYWNlKCR1c2VybmFtZSwgMSk7CiAgICAgICAgJGVtYWlsID0gJHRoaXMtPnJhbmRFbWFpbChzdWJzdHIobWQ1KCR1c2VybmFtZSksIDcsIDEzKSk7CiAgICAgICAgJHJvdyA9ICR0aGlzLT5kc3FsLT5HZXRPbmUoIlNFTEVDVCAqIEZST00gYCNAX19tZW1iZXJgIFdIRVJFIHVzZXJpZCA9ICckdXNlcm5hbWUnICIpOwogICAgICAgIGlmKGlzX2FycmF5KCRyb3cpICYmICFlbXB0eSgkcm93KSkKICAgICAgICB7CiAgICAgICAgICAgIHJldHVybiBhcnJheSgndWlkJyA9PiAkcm93WydtaWQnXSwgJ3VzZXJuYW1lJyA9PiAkdXNlcm5hbWUpOwogICAgICAgIH0KICAgICAgICB0cnkgewogICAgICAgICAgICBpZigkY2ZnX21iX3duYW1lb25lPT0nTicpIHsKICAgICAgICAgICAgICAgICRyb3cgPSAkdGhpcy0+ZHNxbC0+R2V0T25lKCJTRUxFQ1QgKiBGUk9NIGAjQF9fbWVtYmVyYCBXSEVSRSB1bmFtZSBMSUtFICckdXNlcm5hbWUnICIpOwogICAgICAgICAgICAgICAgaWYoaXNfYXJyYXkoJHJvdykpIHsKICAgICAgICAgICAgICAgICAgICB0YV9mYWlsKFRBX0VSUk9SX0VSUk9SLCAndXNlcm5hbWUgaXMgcmVwZWF0JywgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICLTw7unscrD+7vyuavLvsP7s8ayu8Tc1ti4tCIpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZihkZWZpbmVkKCdVQ19BUEknKSAmJiBAaW5jbHVkZV9vbmNlIERFREVST09ULicvdWNfY2xpZW50L2NsaWVudC5waHAnKSB7CiAgICAgICAgICAgICAgICAkdWlkID0gdWNfdXNlcl9yZWdpc3RlcigkdXNlcm5hbWUsICcxMjM0NTYnLCAkZW1haWwpOwogICAgICAgICAgICAgICAgaWYoJHVpZCA8PSAwKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGlmKCR1aWQgPT0gLTEpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICB0YV9mYWlsKFRBX0VSUk9SX0VSUk9SLCAndXNlcm5hbWUgaXMgLTEnLCBpY29udignR0IyMzEyJywgJ1VURi04JywgItPDu6fD+7K7us+3qKOhIikpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlaWYoJHVpZCA9PSAtMikKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRhX2ZhaWwoVEFfRVJST1JfRVJST1IsICd1c2VybmFtZSBpcyAtMicsIGljb252KCdHQjIzMTInLCAnVVRGLTgnLCAisPy6rNKq1MrQ7deisuG1xLTK0++joSIpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZWlmKCR1aWQgPT0gLTMpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICB0YV9mYWlsKFRBX0VSUk9SX0VSUk9SLCAndXNlcm5hbWUgaXMgLTMnLCBpY29udignR0IyMzEyJywgJ1VURi04JywgIsTj1ri2qLXE08O7p8P7IHskdXNlcm5hbWV9INLRtObU2qOsx+vKudPDsfC1xNPDu6fD+6OhIikpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlaWYoJHVpZCA9PSAtNSkKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRhX2ZhaWwoVEFfRVJST1JfRVJST1IsICd1c2VybmFtZSBpcyAtNScsIGljb252KCdHQjIzMTInLCAnVVRGLTgnLCAixOPKudPDtcRFbWFpbCCyu9TK0O3XorLho6EiKSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2VpZigkdWlkID09IC02KQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9FUlJPUiwgJ3VzZXJuYW1lIGlzIC02JywgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICLE48q508O1xEVtYWls0tG+rbG7we3Su9XKusXXorLho6zH68q5xuTL/NXKusWjoSIpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9FUlJPUiwgJ3VzZXJuYW1lIGlzIGVycm9yJywgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICLXosm+yqe4xKOhIikpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAkdWNzeW5sb2dpbiA9IHVjX3VzZXJfc3lubG9naW4oJHVpZCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vu+HUsbXExKzIz73wsdIKICAgICAgICAgICAgJGRmc2NvcmVzID0gMDsKICAgICAgICAgICAgJGRmbW9uZXkgPSAwOwogICAgICAgICAgICAkcmFuZHMgPSBhcnJheSgxMCwgNTAsIDEwMCk7CgogICAgICAgICAgICAkZGZyYW5rID0gJHRoaXMtPmRzcWwtPkdldE9uZSgiU0VMRUNUIG1vbmV5LHNjb3JlcyBGUk9NIGAjQF9fYXJjcmFua2AgV0hFUkUgcmFuaz0nIi4kcmFuZHNbcmFuZCgwLDIpXS4iJyAiKTsKICAgICAgICAgICAgaWYoaXNfYXJyYXkoJGRmcmFuaykpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRkZm1vbmV5ID0gJGRmcmFua1snbW9uZXknXTsKICAgICAgICAgICAgICAgICRkZnNjb3JlcyA9ICRkZnJhbmtbJ3Njb3JlcyddOwogICAgICAgICAgICB9CiAgICAgICAgICAgICRqb2ludGltZSA9IHRpbWUoKTsKICAgICAgICAgICAgJGxvZ2ludGltZSA9IHRpbWUoKTsKICAgICAgICAgICAgJGpvaW5pcCA9IEdldElQKCk7CiAgICAgICAgICAgICRsb2dpbmlwID0gR2V0SVAoKTsKICAgICAgICAgICAgJHB3ZCA9IG1kNSgnMTIzNDU2Jyk7CiAgICAgICAgICAgICRtdHlwZSA9IFJlbW92ZVhTUyhIdG1sUmVwbGFjZSgnuPbIyycsMSkpOwogICAgICAgICAgICAkc2FmZWFuc3dlciA9ICcnOwogICAgICAgICAgICAkc2FmZXF1ZXN0aW9uID0gJyc7CgogICAgICAgICAgICAkc3BhY2VTdGEgPSAoJGNmZ19tYl9zcGFjZXN0YSA8IDAgPyAkY2ZnX21iX3NwYWNlc3RhIDogMCk7CgogICAgICAgICAgICAkaW5RdWVyeSA9ICJJTlNFUlQgSU5UTyBgI0BfX21lbWJlcmAgKGBtdHlwZWAgLGB1c2VyaWRgICxgcHdkYCAsYHVuYW1lYCAsYHNleGAgLGByYW5rYCAsYG1vbmV5YCAsYGVtYWlsYCAsYHNjb3Jlc2AgLAogICAgICAgICAgICBgbWF0dGAsIGBzcGFjZXN0YWAgLGBmYWNlYCxgc2FmZXF1ZXN0aW9uYCxgc2FmZWFuc3dlcmAgLGBqb2ludGltZWAgLGBqb2luaXBgICxgbG9naW50aW1lYCAsYGxvZ2luaXBgICkKICAgICAgICAgICBWQUxVRVMgKCckbXR5cGUnLCckdXNlcm5hbWUnLCckcHdkJywnJHVzZXJuYW1lJywnJywnMTAnLCckZGZtb25leScsJyRlbWFpbCcsJyRkZnNjb3JlcycsCiAgICAgICAgICAgJzAnLCckc3BhY2VTdGEnLCcnLCckc2FmZXF1ZXN0aW9uJywnJHNhZmVhbnN3ZXInLCckam9pbnRpbWUnLCckam9pbmlwJywnJGxvZ2ludGltZScsJyRsb2dpbmlwJyk7ICI7CiAgICAgICAgICAgIGlmKCR0aGlzLT5kc3FsLT5FeGVjdXRlTm9uZVF1ZXJ5KCRpblF1ZXJ5KSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJG1pZCA9ICR0aGlzLT5kc3FsLT5HZXRMYXN0SUQoKTsKCiAgICAgICAgICAgICAgICAvL9C0yOvErMjPu+HUsc/qz7jXysHPCiAgICAgICAgICAgICAgICBpZigkbXR5cGU9PSe49sjLJyl7CiAgICAgICAgICAgICAgICAgICAgJHNwYWNlPSdwZXJzb24nOwogICAgICAgICAgICAgICAgfWVsc2UgaWYoJG10eXBlPT0nxvPStScpewogICAgICAgICAgICAgICAgICAgICRzcGFjZT0nY29tcGFueSc7CiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICAkc3BhY2U9J3BlcnNvbic7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy/QtMjrxKzIz82zvMbK/b7dCiAgICAgICAgICAgICAgICAkbWVtYmVydGpxdWVyeSA9ICJJTlNFUlQgSU5UTyBgI0BfX21lbWJlcl90amAgKGBtaWRgLGBhcnRpY2xlYCxgYWxidW1gLGBhcmNoaXZlc2AsYGhvbWVjb3VudGAsYHBhZ2Vjb3VudGAsYGZlZWRiYWNrYCxgZnJpZW5kYCxgc3Rvd2ApCiAgICAgICAgICAgICAgICAgICAgICAgVkFMVUVTICgnJG1pZCcsJzAnLCcwJywnMCcsJzAnLCcwJywnMCcsJzAnLCcwJyk7ICI7CiAgICAgICAgICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgkbWVtYmVydGpxdWVyeSk7CgogICAgICAgICAgICAgICAgLy/QtMjrxKzIz7/VvOTF5NbDyv2+3QogICAgICAgICAgICAgICAgJHNwYWNlcXVlcnkgPSAiSU5TRVJUIElOVE8gYCNAX19tZW1iZXJfc3BhY2VgKGBtaWRgICxgcGFnZXNpemVgICxgbWF0dGAgLGBzcGFjZW5hbWVgICxgc3BhY2Vsb2dvYCAsYHNwYWNlc3R5bGVgLCBgc2lnbmAgLGBzcGFjZW5ld3NgKQogICAgICAgICAgICAgICAgICAgICAgICBWQUxVRVMoJ3skbWlkfScsJzEwJywnMCcsJ3skdXNlcm5hbWV9tcS/1bzkJywnJywnJHNwYWNlJywnJywnJyk7ICI7CiAgICAgICAgICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgkc3BhY2VxdWVyeSk7CgogICAgICAgICAgICAgICAgLy/QtMjrxuTL/MSsyM/K/b7dCiAgICAgICAgICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgiSU5TRVJUIElOVE8gYCNAX19tZW1iZXJfZmxpbmtgKG1pZCx0aXRsZSx1cmwpIFZBTFVFUygnJG1pZCcsJ9avw87E2sjdudzA7c+1zbMnLCdodHRwOi8vd3d3LmRlZGVjbXMuY29tJyk7ICIpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGFfZmFpbChUQV9FUlJPUl9FUlJPUiwgJ3JlZyBmYWlsJywgaWNvbnYoJ0dCMjMxMicsICdVVEYtOCcsICLXorLhyqew3KOsx+u87LLp18rBz8rHt/HT0M7zu/LT67ncwO3UscGqz7WjoSIpKTsKICAgICAgICAgICAgfQoKICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gJGV4YykgewogICAgICAgICAgICB0YV9mYWlsKFRBX0VSUk9SX0VSUk9SLCAncmVnIGZhaWwnLCBpY29udignR0IyMzEyJywgJ1VURi04JywgJGV4Yy0+Z2V0TWVzc2FnZSgpKSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gYXJyYXkoJ3VpZCcgPT4gJG1pZCwgJ3VzZXJuYW1lJyA9PiAkdXNlcm5hbWUpOwogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gcmFuZEVtYWlsKCR1c2VybmFtZSkgewogICAgICAgICRlbWFpbFNwcyA9IGFycmF5KCcxNjMuY29tJywgJ3FxLmNvbScsICdnbWFpbC5jb20nLCAnc2luYS5jb20nLCAnd2VpYm8uY29tJywgJ3lhaG9vLmNuJywgJzEzOS5jb20nKTsKICAgICAgICAkaXNTaW5vZ3JhbSA9IGVyZWcoJ1snIC4gY2hyKDB4YTEpIC4gJy0nIC4gY2hyKDB4ZmYpIC4gJ10nLCAkdXNlcm5hbWUpOwogICAgICAgICRpc051bWJlciA9IGVyZWcoJ1swLTldJywgJHVzZXJuYW1lKTsKICAgICAgICAkaXNDaGFyYWN0ZXIgPSBlcmVnKCdbYS16QS1aXScsICR1c2VybmFtZSk7CiAgICAgICAgaWYgKCEkaXNTaW5vZ3JhbSB8fCAoISRpc1Npbm9ncmFtICYmICEkaXNOdW1iZXIgJiYgISRpc0NoYXJhY3RlcikpIHsKICAgICAgICAgICAgJGYgPSBzdHJ0b2xvd2VyKCR1c2VybmFtZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJGYgPSBzdHJ0b2xvd2VyKHJhbmRvbShyYW5kKDQsIDEyKSkpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRmIC4gJ0AnIC4gJGVtYWlsU3BzW3JhbmQoMCwgNildOwogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gdXBkYXRlQ2F0Y2goJHR5cGVpZCkgewogICAgICAgIGdsb2JhbCAkY2ZnX0NzOwogICAgICAgICR0aGlzLT5kc3FsLT5FeGVjdXRlTm9uZVF1ZXJ5KCJEZWxldGUgRnJvbSBgI0BfX2FyY2NhY2hlYCAiKTsKICAgICAgICBpZigkY2ZnX0NzWyR0eXBlaWRdWzFdPjApCiAgICAgICAgewogICAgICAgICAgICByZXF1aXJlX29uY2UoREVERUlOQy4iL2FyYy5saXN0dmlldy5jbGFzcy5waHAiKTsKICAgICAgICAgICAgJGx2ID0gbmV3IExpc3RWaWV3KCR0eXBlaWQpOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICByZXF1aXJlX29uY2UoREVERUlOQy4iL2FyYy5zZ2xpc3R2aWV3LmNsYXNzLnBocCIpOwogICAgICAgICAgICAkbHYgPSBuZXcgU2dMaXN0VmlldygkdHlwZWlkKTsKICAgICAgICB9CiAgICAgICAgJGx2LT5Db3VudFJlY29yZCgpOwogICAgICAgICRsdi0+TWFrZUh0bWwoKTsKICAgIH0KCiAgICBwcml2YXRlIGZ1bmN0aW9uIG1lcmdlUmVxdWVzdCgpIHsKICAgICAgICAkcmVxdWVzdERhdGEgPSAkcG9zdERhdGEgPSBhcnJheSgpOwogICAgICAgIGlmIChpc3NldCgkR0xPQkFMU1sncmVxdWVzdCddKSAmJiAkR0xPQkFMU1sncmVxdWVzdCddLT5wb3N0cykgewogICAgICAgICAgICAkcmVxdWVzdERhdGEgPSBhcnJheV9tZXJnZSgkR0xPQkFMU1sncmVxdWVzdCddLT5wb3N0cywgJEdMT0JBTFNbJ3JlcXVlc3QnXS0+Z2V0cyk7CiAgICAgICAgfQoKICAgICAgICBmb3JlYWNoICgkcmVxdWVzdERhdGEgYXMgJGtleSA9PiAkdmFsdWUpIHsKICAgICAgICAgICAgJHBvc3REYXRhWyRrZXldID0gdXJsZGVjb2RlKCR2YWx1ZSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJHBvc3REYXRhOwogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gQ2hlY2tDaGFubmVsKCR0eXBlaWQsICRjaGFubmVsaWQpCiAgICB7CiAgICAgICAgaWYoJHR5cGVpZD09MCkgcmV0dXJuIFRSVUU7CiAgICAgICAgJHJvdyA9ICR0aGlzLT5kc3FsLT5HZXRPbmUoIlNFTEVDVCBpc3BhcnQsY2hhbm5lbHR5cGUgRlJPTSBgI0BfX2FyY3R5cGVgIFdIRVJFIGlkPSckdHlwZWlkJyAiKTsKCiAgICAgICAgaWYoJHJvd1snaXNwYXJ0J10hPTAgfHwgJHJvd1snY2hhbm5lbHR5cGUnXSAhPSAkY2hhbm5lbGlkKSByZXR1cm4gRkFMU0U7CiAgICAgICAgZWxzZSByZXR1cm4gVFJVRTsKICAgIH0KfQo/Pg==
</file>
<file type='dir' name='../shenjianshou/data'>
</file>
<file type='file' name='../shenjianshou/data/common.inc.php'>
PD9waHAgIGlmKCFkZWZpbmVkKCdERURFSU5DJykpIGV4aXQoIlJlcXVlc3QgRXJyb3IhIik7DQpAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApOw0KcmVxdWlyZV9vbmNlIERFREVJTkMuJy9tZW1iZXJsb2dpbi5jbGFzcy5waHAnOw0KLy/U2Mjru/mxvmZ1bmN0aW9uDQpyZXF1aXJlX29uY2UgREVERUFTSy4nL2RhdGEvZnVuY3Rpb25zLmluYy5waHAnOw0KDQpAb2Jfc3RhcnQoKTsNCmlmKCRjZmdfYXNrID09ICdOJykNCnsNCiAgICB0YV9mYWlsKFRBX0VSUk9SX1BMVUdJTl9FUlJPUiwgJ2FzayBjbG9zZScsIGljb252KCdHQjIzMTInLCAnVVRGLTgnLCAizsq08M+1zbPS0bnYsdWjrMfrt7W72CIpKTsNCn0NCi8vu+HUsdDFz6INCiRjZmdfbWwgPSBuZXcgTWVtYmVyTG9naW4oKTsNCi8vzsq08MSjv+nB0LHtz9TKvs7KzOLK/Q0KJGNmZ19hc2tfdHBwID0gJGNmZ19hc2tfdHBwID0gMjA7DQokY2ZnX2Fza190cHAgPSBtYXgoMSwkY2ZnX2Fza190cHApOw0KLy/OyrTwxKO/6c7KzOLT0NCnxtoNCiRjZmdfYXNrX2V4cGlyZWR0aW1lID0gaXNzZXQoJGNmZ19hc2tfZXhwaXJlZHRpbWUpICYmIGlzX251bWVyaWMoJGNmZ19hc2tfZXhwaXJlZHRpbWUpID8gJGNmZ19hc2tfZXhwaXJlZHRpbWUgOiAyMDsNCiRjZmdfYXNrX2V4cGlyZWR0aW1lID0gbWF4KCRjZmdfYXNrX2V4cGlyZWR0aW1lLCAxKTsNCi8vtbHHsM+1zbPKsbzkDQokY2ZnX2Fza190aW1lc3RhbXAgPSB0aW1lKCk7DQovL7vxyKG12Na3DQokY2ZnX2Fza19jdXJsID0gZ2V0dXJsKDEpOw0KLy+21LvxyKG1xLXY1re9+NDQtKbA7aOst72x47X308MNCiRjYWxsdXJsID0gc3RyX3JlcGxhY2UoJyYnLCdeJywkY2ZnX2Fza19jdXJsKTsNCi8vu+HUsdeisuHM+NeqtdjWtw0KJGNmZ19hc2tfbWVtYmVyID0gJGNmZ19iYXNlaG9zdC4nL21lbWJlci9sb2dpbi5waHA/Z291cmw9Jy4kY2FsbHVybDsNCi8vzsq08LWxx7DEv8K8DQokY2ZnX2Fza19kaXJlY3RvcnkgPSAkY2ZnX2Ntc3BhdGguJGNmZ19hc2tfZGlyZWN0b3J5Ow0KLy/OyrTwy/nU2tb3zfjVvr74ttS12Na3DQokY2ZnX2Fza19iYXNlaG9zdCA9IGVtcHR5KCRjZmdfY21zcGF0aCk/ICRjZmdfYmFzZWhvc3QgOiAkY2ZnX2Jhc2Vob3N0LiRjZmdfY21zcGF0aDsNCi8vtbHHsM671sMNCiRjZmdfYXNrX3Bvc2l0aW9uID0gJzxhIGhyZWY9IicuJGNmZ19hc2tfZGlyZWN0b3J5LiciPicuJGNmZ19hc2tfc2l0ZW5hbWUuJzwvYT4gJy4kY2ZnX2Fza19zeW1ib2xzOw0KLy/I57n7xvTTw7b+vLbT8sP7o6y9+9a5tv68tsS/wry3w87KDQppZigkY2ZnX2Fza19pc2RvbWFpbiA9PSAnWScpDQp7DQogICAgaWYoIXByZWdfbWF0Y2ggKCIjJGNmZ19hc2tfZG9tYWluI2kiLCRjYWxsdXJsKSkNCiAgICB7DQogICAgICAgIHRhX2ZhaWwoVEFfRVJST1JfUExVR0lOX0VSUk9SLCAkY2ZnX2Fza19kb21haW4sIGljb252KCdHQjIzMTInLCAnVVRGLTgnLCAit8e3qLLZ1/ciKSk7DQogICAgfQ0KfQ0KPz4=
</file>
<file type='file' name='../shenjianshou/data/functions.inc.php'>

</file>
<file type='file' name='../shenjianshou/index.php'>
PD9waHANCiRwYWdlX3N0YXJ0X3RpbWUgPSBtaWNyb3RpbWUoVFJVRSk7DQpkZWZpbmUoJ0FQUE5BTUUnLCAnc2hlbmppYW5zaG91Jyk7DQpyZXF1aXJlX29uY2UoZGlybmFtZShfX2ZpbGVfXykuJy8uLi9pbmNsdWRlL2NvbW1vbi5pbmMucGhwJyk7DQpyZXF1aXJlX29uY2UoREVERUlOQy4nL3JlcXVlc3QuY2xhc3MucGhwJyk7DQoNCmRlZmluZSgnREVERUFTSycsZGlybmFtZShfX0ZJTEVfXykpOw0KcmVxdWlyZV9vbmNlKERFREVBU0suJy9saWJyYXJpZXMvY29uZmlnLnBocCcpOw0KcmVxdWlyZV9vbmNlKERFREVBU0suJy9saWJyYXJpZXMvdGEuZnVuY3Rpb25zLnBocCcpOw0KDQovL7bU1b6147j5zfjWt9fuuvMvvfjQ0Ln9wssNCiRjZmdfYmFzZWhvc3QgPSBwcmVnX3JlcGxhY2UoIiMvJCMiLCcnLCRjZmdfYmFzZWhvc3QpOw0KDQovL9TYyOvF5NbDzsS8/g0KcmVxdWlyZV9vbmNlKERFREVBU0suJy9kYXRhL2NvbW1vbi5pbmMucGhwJyk7DQoNCg0KJGN0ID0gUmVxdWVzdCgnY3QnLCAnaW5kZXgnKTsNCiRhYyA9IFJlcXVlc3QoJ2FjJywgJ2luZGV4Jyk7DQoNCi8vIM2z0rvTptPDs8zQ8sjrv9oNClJ1bkFwcCgkY3QsICRhYyk7DQo=
</file>
<file type='dir' name='../shenjianshou/libraries'>
</file>
<file type='file' name='../shenjianshou/libraries/config.php'>
PD9waHANCiR0YXJnZXRhbnlfY29uZmlnID0gYXJyYXkoDQogICAgJ3Byb3RvY29sJyA9PiAnMScsDQogICAgJ3Byb3RvY29sVmVyc2lvbicgPT4gJzEnLA0KICAgICdzdXBwb3J0U3RkVmVyc2lvbicgPT4gYXJyYXkoDQogICAgICAgICdhcnRpY2xlJyA9PiAnMS4wLjAnLA0KICAgICAgICAncXVlc3Rpb24nID0+ICcxLjAuMCcNCiAgICApLA0KICAgICdwaHAnID0+IFBIUF9WRVJTSU9OLA0KICAgICdzdXBwb3J0VmVyc2lvbicgPT4gJ2RlZGVjbXMgNS43JywNCiAgICAndmVyc2lvbicgPT4gJ2JldGEgMS4wLjEnLA0KICAgICdwdWJWZXJzaW9uJyA9PiAnMy4xLjMnLA0KICAgICd2ZXJzaW9uRGV0YWlsJyA9PiBhcnJheSgpLCAvL3NldCBieSB0aGlzIHNlcnZpY2UNCiAgICAnb3RoZXJJbmZvJyA9PiBhcnJheSgpLA0KICAgICd2ZXJzaW9uRGV0YWlsJyA9PiBhcnJheSgpDQopOw0KPz4=
</file>
<file type='file' name='../shenjianshou/libraries/inc_archives_functions.php'>

</file>
<file type='file' name='../shenjianshou/libraries/ta.functions.php'>
PD9waHAKZGVmaW5lKCdUQV9FUlJPUl9OT05FJywwKTsKZGVmaW5lKCdUQV9FUlJPUl9FUlJPUicsMSk7CmRlZmluZSgnVEFfRVJST1JfUExVR0lOX0VSUk9SJywyKTsKZGVmaW5lKCdUQV9FUlJPUl9JTlZBTElEX1BXRCcsMTAwKTsKZGVmaW5lKCdUQV9FUlJPUl9NSVNTSU5HX0ZJRUxEJywxMDEpOwoKZnVuY3Rpb24gdGFfc3VjY2VzcygkZGF0YT0iIiwkbWVzc2FnZT0iIil7Cgl0YV9yZXN1bHQoMSwgJGRhdGEsICRtZXNzYWdlKTsKfQpmdW5jdGlvbiB0YV9mYWlsKCRjb2RlPTIsJGRhdGE9IiIsJG1lc3NhZ2U9IiIpewoJdGFfcmVzdWx0KCRjb2RlLCAkZGF0YSwgJG1lc3NhZ2UpOwp9CmZ1bmN0aW9uIHRhX3Jlc3VsdCgkcmVzdWx0PTEsJGRhdGE9IiIsJG1lc3NhZ2U9IiIpewoJZGllKGpzb25fZW5jb2RlKGFycmF5KCJyZXN1bHQiPT4gJHJlc3VsdCwiZGF0YSI9PiAkZGF0YSwibWVzc2FnZSI9PiB1cmxlbmNvZGUoJG1lc3NhZ2UpKSkpOwp9CgovLyBHZXQgUmVhbCBVcmwgZm9yIDMwMiBVUkwKZnVuY3Rpb24gdGFfcmVkaXJlY3RfdXJsKCR1cmwpIHsKICAgIGlmIChlbXB0eSgkdXJsKSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICAgIGlmKHN0cmlwb3MoJHVybCwgInN0YXRpYy5zaGVuamlhbnNob3UuY24iKSA9PT0gZmFsc2UpewogICAgCS8vaWYgbm90IGhvc3RlZCBieSBzaGVuamlhbnNob3UKICAgIAlyZXR1cm4gYXJyYXkoJ3JlYWx1cmwnID0+ICR1cmwsICdyZWZlcmVyJyA9PiAiIik7CiAgICB9CiAgICAkcmVzdWx0ID0gdGFfY3VybF9oZWFkZXJzKCR1cmwuJy1kbCcpOwogICAgaWYgKCRyZXN1bHQgIT09IGZhbHNlICYmIHN0cnBvcygkcmVzdWx0LCAiMzAyIE1vdmVkIFRlbXBvcmFyaWx5IikpIHsKICAgICAgICAkaGVhZGVycyA9IHByZWdfc3BsaXQoIi9cclxuKy8iLCAkcmVzdWx0KTsKICAgICAgICBpZiAoaXNfYXJyYXkoJGhlYWRlcnMpKSB7CiAgICAgICAgICAgICRyZWFsX3VybCA9IG51bGw7CiAgICAgICAgICAgICRyZWZlcmVyID0gJyc7CiAgICAgICAgICAgIGZvcmVhY2ggKCRoZWFkZXJzIGFzICRoZWFkZXIpIHsKICAgICAgICAgICAgICAgICRoZWFkZXIgPSB0cmltKCRoZWFkZXIpOwogICAgICAgICAgICAgICAgJGxvY3BvcyA9IHN0cmlwb3MoJGhlYWRlciwgImxvY2F0aW9uIik7CiAgICAgICAgICAgICAgICAkcmVmZXJlcnBvcyA9IHN0cmlwb3MoJGhlYWRlciwgIlgtUmVmZXJlciIpOwogICAgICAgICAgICAgICAgaWYgKCRsb2Nwb3MgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICAkcHAgPSBzdHJwb3MoJGhlYWRlciwgIjoiKTsKICAgICAgICAgICAgICAgICAgICAkcmVhbF91cmwgPSB0cmltKHN1YnN0cigkaGVhZGVyLCAkcHAgKyAxKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoJHJlZmVyZXJwb3MgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICAkcHAgPSBzdHJwb3MoJGhlYWRlciwgIjoiKTsKICAgICAgICAgICAgICAgICAgICAkcmVmZXJlciA9IHRyaW0oc3Vic3RyKCRoZWFkZXIsICRwcCArIDEpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoIWVtcHR5KCRyZWFsX3VybCkgJiYgc3RyaXBvcygkcmVhbF91cmwsICJodHRwIikgPT09IDApIHsKICAgICAgICAgICAgICAgIHJldHVybiBhcnJheSgncmVhbHVybCcgPT4gJHJlYWxfdXJsLCAncmVmZXJlcicgPT4gJHJlZmVyZXIpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIGZhbHNlOwp9CgpmdW5jdGlvbiB0YV9jdXJsX2hlYWRlcnMoJHVybCl7CiAgLy8gs/XKvLuvQ3VybAogICRjaCA9IGN1cmxfaW5pdCgpOwogIC8vIL+qxvRoZWFkZXLP1Mq+CiAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0hFQURFUiwgdHJ1ZSk7CiAgLy8gsrvK5LP2zfjSs8TayN0KICBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfTk9CT0RZLCB0cnVlKTsKICAvLyC9+9a519S2r8rks/bE2sjdCiAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCB0cnVlKTsKICAvLyDX1LavzPjXqgogIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9GT0xMT1dMT0NBVElPTiwgZmFsc2UpOwogIC8vIMz416rKsdfUtq/J6NbDwLTUtLXY1rcKICBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfQVVUT1JFRkVSRVIsIHRydWUpOwogIC8vILOsyrHKsbzkCiAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1RJTUVPVVQsIDYwKTsKICAvLyDJ6NbDVVJMCiAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1VSTCwgJHVybCk7CiAgLy8gudix1VNTTNakyunR6dakCiAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1NTTF9WRVJJRllQRUVSLCBmYWxzZSk7CiAgLy8gt7W72L3hufsKICByZXR1cm4gY3VybF9leGVjKCRjaCk7Cn0KCmZ1bmN0aW9uIHRhX2xvZygkZGF0YSkgewogICAgaWYgKCRkYXRhICYmIChpc19hcnJheSgkZGF0YSkgfHwgaXNfb2JqZWN0KCRkYXRhKSkpIHsKICAgICAgICBpZiAobWV0aG9kX2V4aXN0cygkZGF0YSwgJ2pzb25TZXJpYWxpemUnKSkgewogICAgICAgICAgICAkZGF0YSA9ICRkYXRhLT5qc29uU2VyaWFsaXplKCk7CiAgICAgICAgfQogICAgICAgICRzdHIgPSBqc29uX2VuY29kZSgkZGF0YSk7CiAgICB9IGVsc2UgewogICAgICAgICRzdHIgPSAkZGF0YTsKICAgIH0KICAgICRteWZpbGUgPSBmb3BlbigidGFfbG9nLnR4dCIsICJhIikgb3IgZGllKCJVbmFibGUgdG8gb3BlbiBmaWxlISIpOwogICAgZndyaXRlKCRteWZpbGUsICRzdHIpOwogICAgZmNsb3NlKCRteWZpbGUpOwp9CgpmdW5jdGlvbiBkaWNvbnYoJHN0ciwgJGluX2NoYXJzZXQgPSAndXRmLTgnLCAkb3V0X2NoYXJzZXQgPSAnR0IyMzEyJywgJEZvcmNlVGFibGUgPSBGQUxTRSkgewoKICAgICRpbl9jaGFyc2V0ID0gc3RydG91cHBlcigkaW5fY2hhcnNldCk7CiAgICAkb3V0X2NoYXJzZXQgPSBzdHJ0b3VwcGVyKCRvdXRfY2hhcnNldCk7CgogICAgaWYgKGVtcHR5KCRzdHIpIHx8ICRpbl9jaGFyc2V0ID09ICRvdXRfY2hhcnNldCkgewogICAgICAgIHJldHVybiAkc3RyOwogICAgfQoKICAgICRvdXQgPSAnJzsKCiAgICBpZiAoISRGb3JjZVRhYmxlKSB7CiAgICAgICAgaWYgKGZ1bmN0aW9uX2V4aXN0cygnaWNvbnYnKSkgewogICAgICAgICAgICAkb3V0ID0gaWNvbnYoJGluX2NoYXJzZXQsICRvdXRfY2hhcnNldCAuICcvL0lHTk9SRScsICRzdHIpOwogICAgICAgIH0gZWxzZWlmIChmdW5jdGlvbl9leGlzdHMoJ21iX2NvbnZlcnRfZW5jb2RpbmcnKSkgewogICAgICAgICAgICAkb3V0ID0gbWJfY29udmVydF9lbmNvZGluZygkc3RyLCAkb3V0X2NoYXJzZXQsICRpbl9jaGFyc2V0KTsKICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuICRvdXQ7Cn0K
</file>
<file type='dir' name='../shenjianshou/model'>
</file>
<file type='file' name='../shenjianshou/model/askanswer.php'>

</file>
<file type='file' name='../shenjianshou/model/mquestion.php'>

</file>
<file type='file' name='../shenjianshou/model/mscores.php'>
PD9waHAgICBpZighZGVmaW5lZCgnREVERUlOQycpKSBleGl0KCJSZXF1ZXN0IEVycm9yISIpOwovKioKICogu/231rSmwO0KICoKICogQHZlcnNpb24gICAgICAgICRJZDogcXVlc3Rpb24ucGhwIDIwMTAvMTIvMyAgc2hheGlhbiAkCiAqIEBwYWNrYWdlICAgICAgICBEZWRlQ01TLkxpYnJhcmllcwogKiBAY29weXJpZ2h0ICAgICAgQ29weXJpZ2h0IChjKSAyMDA3IC0gMjAxMCwgRGVzRGV2LCBJbmMuCiAqIEBsaWNlbnNlICAgICAgICBodHRwOi8vaGVscC5kZWRlY21zLmNvbS91c2Vyc2d1aWRlL2xpY2Vuc2UuaHRtbAogKiBAbGluayAgICAgICAgICAgaHR0cDovL3d3dy5kZWRlY21zLmNvbQogKi8KIApjbGFzcyBtc2NvcmVzIGV4dGVuZHMgTW9kZWwKeyAgIAogICAgLyoqCiAgICAgKiC3orHtzsTVwsqxv9uz/bv9t9YKICAgICAqCiAgICAgKiBAcGFyYW0gICAgIGludCAgICAkdWlkCiAgICAgKiBAcGFyYW0gICAgIGludCAgICAkbmVlZHNjb3JlCiAgICAgKiBAcmV0dXJuICAgIGFycmF5CiAgICAgKi8KICAgIGZ1bmN0aW9uIHVwZGF0ZV9zY29yZXMoJHVpZCA9ICIiICwkbmVlZHNjb3JlID0gMCkKICAgIHsKICAgICAgICBpZigkdWlkKXsKICAgICAgICAgICAgJHF1ZXJ5ID0gIlVQREFURSBgI0BfX21lbWJlcmAgU0VUIHNjb3Jlcz1zY29yZXMtJG5lZWRzY29yZSBXSEVSRSBtaWQ9JyR1aWQnIjsKICAgICAgICAgICAgaWYoJHRoaXMtPmRzcWwtPkV4ZWN1dGVOb25lUXVlcnkoJHF1ZXJ5KSkgcmV0dXJuIFRSVUU7CiAgICAgICAgICAgIGVsc2UgcmV0dXJuIEZBTFNFOwogICAgICAgIH1lbHNlewogICAgICAgICAgICByZXR1cm4gRkFMU0U7CiAgICAgICAgfQogICAgfQogICAgCiAgICAvKioKICAgICAqILeise272Li0yrHU9rzTu/231gogICAgICoKICAgICAqIEBwYXJhbSAgICAgaW50ICAgICR1aWQKICAgICAqIEBwYXJhbSAgICAgaW50ICAgICRuZWVkc2NvcmUKICAgICAqIEByZXR1cm4gICAgYXJyYXkKICAgICAqLwogICAgZnVuY3Rpb24gYWRkX3Njb3JlcygkdWlkID0gIiIgLCRuZWVkc2NvcmUgPSAwKQogICAgewogICAgICAgIGlmKCR1aWQpewogICAgICAgICAgICAkcXVlcnkgPSAiVVBEQVRFIGAjQF9fbWVtYmVyYCBTRVQgc2NvcmVzPXNjb3JlcyskbmVlZHNjb3JlIFdIRVJFIG1pZD0nJHVpZCciOwogICAgICAgICAgICBpZigkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgkcXVlcnkpKSByZXR1cm4gVFJVRTsKICAgICAgICAgICAgZWxzZSByZXR1cm4gRkFMU0U7CiAgICAgICAgfWVsc2V7CiAgICAgICAgICAgIHJldHVybiBGQUxTRTsKICAgICAgICB9CiAgICB9CiAgICAKICAgIC8qKgogICAgICogu/HIodfcu/231sXF0NAKICAgICAqCiAgICAgKiBAcmV0dXJuICAgIGFycmF5CiAgICAgKi8KICAgIGZ1bmN0aW9uIGdldF9zY29yZXMoJHJvdyA9IDEwKQogICAgewogICAgICAgICRtZW1iZXJsaXN0cyA9IGFycmF5KCk7CiAgICAgICAgJHF1ZXJ5ID0gIlNFTEVDVCBtYi4qLG1zLnNwYWNlbmFtZSxtcy5zaWduIEZST00gYCNAX19tZW1iZXJgIG1iCiAgICAgICAgTEVGVCBKT0lOIGAjQF9fbWVtYmVyX3NwYWNlYCBtcyBPTiBtcy5taWQgPSBtYi5taWQKICAgICAgICBXSEVSRSBtYi5zcGFjZXN0YT4tMSBBTkQgbWIubWF0dDwxMCBPUkRFUiBCWSBtYi5zY29yZXMgREVTQyBMSU1JVCAwLCRyb3ciOwogICAgICAgICR0aGlzLT5kc3FsLT5FeGVjdXRlKCdtZScsJHF1ZXJ5KTsKICAgICAgICB3aGlsZSgkYXJyID0gJHRoaXMtPmRzcWwtPkdldEFycmF5KCkpCiAgICAgICAgewogICAgICAgIAkkbWVtYmVybGlzdHNbXSA9ICRhcnI7IAogICAgICAgIH0KICAgICAgICByZXR1cm4gJG1lbWJlcmxpc3RzOwogICAgfQogICAgCn0=
</file>
<file type='file' name='../shenjianshou/model/mtype.php'>
PD9waHAgICBpZighZGVmaW5lZCgnREVERUlOQycpKSBleGl0KCJSZXF1ZXN0IEVycm9yISIpOwovKioKICogt9bA4CjG1c2oKQogKgogKiBAdmVyc2lvbiAgICAgICAgJElkOiBxdWVzdGlvbi5waHAgMjAxMC8xMi8zICBzaGF4aWFuICQKICogQHBhY2thZ2UgICAgICAgIERlZGVDTVMuTGlicmFyaWVzCiAqIEBjb3B5cmlnaHQgICAgICBDb3B5cmlnaHQgKGMpIDIwMDcgLSAyMDEwLCBEZXNEZXYsIEluYy4KICogQGxpY2Vuc2UgICAgICAgIGh0dHA6Ly9oZWxwLmRlZGVjbXMuY29tL3VzZXJzZ3VpZGUvbGljZW5zZS5odG1sCiAqIEBsaW5rICAgICAgICAgICBodHRwOi8vd3d3LmRlZGVjbXMuY29tCiAqLwogCmNsYXNzIG10eXBlIGV4dGVuZHMgTW9kZWwKeyAgIAogICAgLyoqCiAgICAgKiC3orHtzsTVwsqxtcTAuMS/0MXPogogICAgICoKICAgICAqIEBwYXJhbSAgICAgc3RyaW5nICAgICR3aGVyZXNxbAogICAgICogQHJldHVybiAgICBhcnJheQogICAgICovCiAgICBmdW5jdGlvbiBnZXRfYXNrdHlwZSgkd2hlcmVzcWwgPSAiIikKICAgIHsKICAgICAgICAkcXVlcnkgPSAiU0VMRUNUIGlkLCBuYW1lLCByZWlkIEZST00gYCNAX19hc2t0eXBlYCAkd2hlcmVzcWwgT1JERVIgQlkgZGlzb3JkZXIgREVTQyI7CiAgICAgICAgJHRoaXMtPmRzcWwtPlNldFF1ZXJ5KCRxdWVyeSk7CiAgICAgICAgJHRoaXMtPmRzcWwtPkV4ZWN1dGUoKTsKICAgICAgICAkYXNrdHlwZXMgPSBhcnJheSgpOwogICAgICAgIHdoaWxlKCRhc2t0eXBlID0gJHRoaXMtPmRzcWwtPkdldEFycmF5KCkpCiAgICAgICAgewogICAgICAgICAgICAkYXNrdHlwZXNbXSA9ICRhc2t0eXBlOyAgICAgICAgCiAgICAgICAgfQogICAgICAgIHJldHVybiAkYXNrdHlwZXM7CiAgICB9CiAgICAKICAgLyoqCiAgICAgKiC4/NDC0ru49sC4xL+1xM2zvMbQxc+iCiAgICAgKgogICAgICogQHBhcmFtICAgICBpbnQgICAgJHRpZAogICAgICogQHJldHVybiAgICBpbnQKICAgICAqLwogICAgZnVuY3Rpb24gdXBkYXRlX2Fza3R5cGUoJHRpZCA9ICIiKQogICAgewogICAgICAgIGlmKCR0aWQpCiAgICAgICAgewogICAgICAgICAgICAkcXVlcnkgPSAiVVBEQVRFIGAjQF9fYXNrdHlwZWAgU0VUIGFza251bT1hc2tudW0rMSBXSEVSRSBpZD0nJHRpZCciOwogICAgICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgkcXVlcnkpOwogICAgICAgICAgICByZXR1cm4gVFJVRTsKICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgcmV0dXJuIEZBTFNFOyAgIAogICAgICAgIH0KCiAgICB9CiAgICAgCiAgICAvKioKICAgICAqILj80MK31sDgxcXQ8gogICAgICogQHJldHVybiAgICBzdHJpbmcKICAgICAqLwogICAgZnVuY3Rpb24gdXBkYXRlKCRkaXNvcmRlcnMgPSBhcnJheSgpKQogICAgewogICAgICAgIGlmKGlzX2FycmF5KCRkaXNvcmRlcnMpKQogICAgICAgIHsKICAgICAgICAgICAgZm9yZWFjaCgkZGlzb3JkZXJzIGFzICRrZXkgPT4gJGRpc29yZGVyKQogICAgICAgIAl7CiAgICAgICAgCQkkcXVlcnkgPSAiVVBEQVRFIGAjQF9fYXNrdHlwZWAgU0VUIGRpc29yZGVyPSckZGlzb3JkZXInIFdIRVJFIGlkPScka2V5JyI7CiAgICAgICAgCQkkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgkcXVlcnkpOyAKICAgICAgICAJfQogICAgICAgIAlyZXR1cm4gVFJVRTsKICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgcmV0dXJuIEZBTFNFOyAgCiAgICAgICAgfQogICAgfQogICAgCiAgICAvKioKICAgICAqILvxyKHL+dPQwLjEvwogICAgICogQHJldHVybiAgICBzdHJpbmcKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0X2FsbHR5cGUoKQogICAgewogICAgICAgICRxdWVyeSA9ICJTRUxFQ1QgKiBGUk9NIGAjQF9fYXNrdHlwZWAgT1JERVIgQlkgZGlzb3JkZXIgREVTQywgaWQgQVNDIjsKICAgICAgICAkdGhpcy0+ZHNxbC0+U2V0UXVlcnkoJHF1ZXJ5KTsKICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZSgpOwogICAgICAgICR0aWRzID0gJHRpZDJzID0gJGFza3R5cGVzID0gYXJyYXkoKTsKICAgICAgICB3aGlsZSgkYXNrdHlwZSA9ICR0aGlzLT5kc3FsLT5HZXRBcnJheSgpKQogICAgICAgIHsKICAgICAgICAJaWYoJGFza3R5cGVbJ3JlaWQnXSA9PSAwKQogICAgICAgIAl7CiAgICAgICAgCQkkdGlkc1tdID0gJGFza3R5cGU7CiAgICAgICAgCX1lbHNlewogICAgICAgIAkJJHRpZDJzW10gPSAkYXNrdHlwZTsKICAgICAgICAJfQogICAgICAgIAogICAgICAgIH0KICAgICAgICBmb3JlYWNoKCR0aWRzIGFzICR0aWQpCiAgICAgICAgewogICAgICAgIAkkYXNrdHlwZXNbXSA9ICR0aWQ7CiAgICAgICAgCWZvcmVhY2goJHRpZDJzIGFzICRrZXkgPT4gJHRpZDIpCiAgICAgICAgCXsKICAgICAgICAJCWlmKCR0aWQyWydyZWlkJ10gPT0gJHRpZFsnaWQnXSkKICAgICAgICAJCXsKICAgICAgICAJCQkkYXNrdHlwZXNbXSA9ICR0aWQyOwogICAgICAgIAkJCXVuc2V0KCR0aWQyc1ska2V5XSk7CiAgICAgICAgCQl9CiAgICAgICAgCX0KICAgICAgICB9CiAgICAgICAgcmV0dXJuICRhc2t0eXBlczsKICAgIH0KICAgIAogICAgLyoqCiAgICAgKiDU9rzTus2x4LytyrG1xMv509DAuMS/u/HIoQogICAgICogQHBhcmFtICAgIGludCAkdHlwZSAxo7qx4LytLDKjutT2vNMKICAgICAqIEBwYXJhbSAgICBpbnQgJGlkCiAgICAgKiBAcGFyYW0gICAgaW50ICRyZWlkCiAgICAgKiBAcmV0dXJuICAgIHN0cmluZwogICAgICovCiAgICBmdW5jdGlvbiBnZXRfb3B0aW9udHlwZSgkdHlwZSA9IDEsJGlkID0gIiIsJHJlaWQgPSAiIikKICAgIHsKICAgICAgICAkc2VjdG9yc2NhY2hlID0gJzxvcHRpb24gdmFsdWU9IjAiPs7eKNf3zqrSu7y2t9bA4Ck8L29wdGlvbj4nOwogICAgICAgIGlmKCR0eXBlID09IDIpICR3aGVyZXNxbCA9ICJXSEVSRSByZWlkPTAiOwogICAgICAgIGVsc2UgJHdoZXJlc3FsID0gIldIRVJFIHJlaWQ9MCBhbmQgaWQ8PickaWQnIjsKICAgICAgICAkcXVlcnkgPSAiU0VMRUNUICogRlJPTSBgI0BfX2Fza3R5cGVgIHskd2hlcmVzcWx9IE9SREVSIEJZIGRpc29yZGVyIEFTQywgaWQgQVNDIjsKCQkkdGhpcy0+ZHNxbC0+U2V0UXVlcnkoJHF1ZXJ5KTsKCQkkdGhpcy0+ZHNxbC0+RXhlY3V0ZSgpOwoJCXdoaWxlKCR0b3BzZWN0b3IgPSAkdGhpcy0+ZHNxbC0+R2V0QXJyYXkoKSkKCQl7CgkJCSRjaGVjayA9ICcnOwoJCQlpZigkcmVpZCAhPSAwICYmICR0b3BzZWN0b3JbJ2lkJ10gPT0gJHJlaWQpICRjaGVjayA9ICdzZWxlY3RlZCc7CgkJCSRzZWN0b3JzY2FjaGUgLj0gJzxvcHRpb24gdmFsdWU9IicuJHRvcHNlY3RvclsnaWQnXS4nIiAnLiAkY2hlY2suJz4nLiR0b3BzZWN0b3JbJ25hbWUnXS4nPC9vcHRpb24+JzsKCQl9CiAgICAgICAgcmV0dXJuICRzZWN0b3JzY2FjaGU7CiAgICB9CiAgICAKICAgIC8qKgogICAgICogu/HIodK7uPbAuMS/CiAgICAgKiBAcGFyYW0gICAgaW50ICRpZAogICAgICogQHJldHVybiAgICBzdHJpbmcKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0X29uZXR5cGUoJGlkID0gIiIpCiAgICB7CiAgICAgICAgJHJzID0gJHRoaXMtPmRzcWwtPkdldE9uZSgiU0VMRUNUICogRlJPTSBgI0BfX2Fza3R5cGVgIFdIRVJFIGlkPSd7JGlkfSciKTsKICAgICAgICByZXR1cm4gJHJzOwogICAgfQogICAgCiAgICAvKioKICAgICAqILGjtObSu7j2seC8rdauuvPAuMS/CiAgICAgKiBAcGFyYW0gICAgIGFycmF5ICAkZGF0YQogICAgICogQHJldHVybiAgICBzdHJpbmcKICAgICAqLwogICAgZnVuY3Rpb24gc2F2ZV9lZGl0KCRkYXRhID0gYXJyYXkoKSkKICAgIHsKICAgICAgICAkcXVlcnkgPSAiVVBEQVRFIGAjQF9fYXNrdHlwZWAgU0VUIG5hbWU9J3skZGF0YVsnbmFtZSddfScsIHJlaWQ9J3skZGF0YVsncmVpZCddfScsIGRpc29yZGVyPSd7JGRhdGFbJ2Rpc29yZGVyJ119JwogICAgICAgICAgICAgICAgV0hFUkUgaWQ9J3skZGF0YVsnaWQnXX0nICI7CgkJaWYoJHRoaXMtPmRzcWwtPkV4ZWN1dGVOb25lUXVlcnkoJHF1ZXJ5KSkgcmV0dXJuIFRSVUU7CiAgICAgICAgZWxzZSByZXR1cm4gRkFMU0U7ICAKICAgIH0KICAgIAogICAvKioKICAgICAqIMm+s/3Su7j2wLjEvwogICAgICogQHBhcmFtICAgICBhcnJheSAgJGlkCiAgICAgKiBAcmV0dXJuICAgIHN0cmluZwogICAgICovCiAgICBmdW5jdGlvbiBkZWxfdHlwZSgkaWQgPSAiIikKICAgIHsKICAgICAgICBpZigkaWQpewogICAgICAgICAgICAkcXVlcnkgPSAiREVMRVRFIEZST00gYCNAX19hc2t0eXBlYCBXSEVSRSBpZD0nJGlkJyBPUiByZWlkPSckaWQnICI7IAogICAgICAgICAgICBpZigkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgkcXVlcnkpKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkcXVlcnkgPSAiU0VMRUNUIGlkIEZST00gYCNAX19hc2tgIFdIRVJFIHRpZD0nJGlkJyBPUiB0aWQyPSckaWQnIjsKICAgICAgICAgICAgICAgICR0aGlzLT5kc3FsLT5TZXRRdWVyeSgkcXVlcnkpOwogICAgICAgICAgICAgICAgJHRoaXMtPmRzcWwtPkV4ZWN1dGUoKTsKICAgICAgICAgICAgICAgICRhc2tpZHMgPSBhcnJheSgpOwogICAgICAgICAgICAgICAgd2hpbGUoJGFyciA9ICR0aGlzLT5kc3FsLT5HZXRBcnJheSgpKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRhc2tpZHNbXSA9ICRhcnJbJ2lkJ107CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3JlYWNoICgkYXNraWRzIGFzICRhc2tpZCkgewogICAgICAgICAgICAgICAgICAgICRxdWVyeSA9ICJERUxFVEUgRlJPTSBgI0BfX2Fza2NvbW1lbnRgIFdIRVJFIGFza2lkPSckaWQnICI7CiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmRzcWwtPkV4ZWN1dGVOb25lUXVlcnkoJHF1ZXJ5KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICRxdWVyeTIgPSAiREVMRVRFIEZST00gYCNAX19hc2thbnN3ZXJgIFdIRVJFIHRpZD0nJGlkJyBPUiB0aWQyPSckaWQnICI7IAogICAgICAgICAgICAgICAgJHF1ZXJ5MyA9ICJERUxFVEUgRlJPTSBgI0BfX2Fza2Fuc3dlcmAgV0hFUkUgdGlkPSckaWQnIE9SIHRpZDI9JyRpZCcgIjsgCiAgICAgICAgICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgkcXVlcnkyKTsKICAgICAgICAgICAgICAgICR0aGlzLT5kc3FsLT5FeGVjdXRlTm9uZVF1ZXJ5KCRxdWVyeTMpOwogICAgICAgICAgICAgICAgcmV0dXJuIFRSVUU7ICAgCiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgcmV0dXJuIEZBTFNFOwogICAgICAgICAgICB9IAogICAgICAgIH1lbHNlewogICAgICAgICAgIHJldHVybiBGQUxTRTsKICAgICAgICB9IAogICAgfQogICAgCiAgICAvKioKICAgICAqILGjtObSu7j20MLU9rXEwLjEvwogICAgICogQHBhcmFtICAgICBhcnJheSAgJGRhdGEKICAgICAqIEByZXR1cm4gICAgc3RyaW5nCiAgICAgKi8KICAgIGZ1bmN0aW9uIHNhdmVfYWRkKCRkYXRhID0gYXJyYXkoKSkKICAgIHsKICAgICAgICBpZihpc19hcnJheSgkZGF0YSkpCiAgICAgICAgewogICAgICAgICAgICAkcXVlcnkgPSAiSU5TRVJUIElOVE8gYCNAX19hc2t0eXBlYChuYW1lLCByZWlkKSBWQUxVRVMoJ3skZGF0YVsnbmFtZSddfScsJ3skZGF0YVsncmVpZCddfScpOyI7CiAgICAJCWlmKCR0aGlzLT5kc3FsLT5FeGVjdXRlTm9uZVF1ZXJ5KCRxdWVyeSkpIHJldHVybiBUUlVFOwogICAgICAgICAgICBlbHNlIHJldHVybiBGQUxTRTsgCiAgICAgICAgfWVsc2V7CiAgICAgICAgICAgIHJldHVybiBGQUxTRTsKICAgICAgICB9IAogICAgfQogICAgCiAgICAKfQ==
</file>
<file type='file' name='../shenjianshou/model/taconfig.php'>
PD9waHAgICBpZighZGVmaW5lZCgnREVERUlOQycpKSBleGl0KCJSZXF1ZXN0IEVycm9yISIpOwoKY2xhc3MgdGFjb25maWcgZXh0ZW5kcyBNb2RlbAp7CiAgICAvKioKICAgICAqILXDtb3Qxc+iCiAgICAgKgogICAgICogQHBhcmFtICAgICBzdHJpbmcgICAgJGNvbmZpZ0tleQogICAgICogQHJldHVybiAgICBhcnJheQogICAgICovCiAgICBmdW5jdGlvbiBnZXRDb25maWcoJGNvbmZpZ0tleSA9ICIiKQogICAgewoKICAgICAgICAkcXVlcnkgPSAiU0VMRUNUICogRlJPTSBgI0BfX3RhY29uZmlnYCB3aGVyZSBga2V5YCA9ICciIC4gbXlzcWxfZXNjYXBlX3N0cmluZyhhZGRzbGFzaGVzKCRjb25maWdLZXkpKSAuICInIjsKICAgICAgICAkdGhpcy0+ZHNxbC0+U2V0UXVlcnkoJHF1ZXJ5KTsKICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZSgpOwogICAgICAgICRjb25maWdzID0gYXJyYXkoKTsKICAgICAgICB3aGlsZSgkY29uZmlnID0gJHRoaXMtPmRzcWwtPkdldEFycmF5KCkpCiAgICAgICAgewogICAgICAgICAgICAkY29uZmlnc1tdID0gJGNvbmZpZzsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkY29uZmlnczsKICAgIH0KCiAgIC8qKgogICAgICoguPzQwtK7uPbF5NbDCiAgICAgKgogICAgICogQHBhcmFtICAgICBpbnQgICAgJHRpZAogICAgICogQHJldHVybiAgICBpbnQKICAgICAqLwogICAgZnVuY3Rpb24gc2V0Q29uZmlnKCRjb25maWdLZXkgPSAiIiwgJHZhbHVlID0gJycsICRpZCA9IDApCiAgICB7CiAgICAgICAgaWYoJGNvbmZpZ0tleSkKICAgICAgICB7CiAgICAgICAgICAgICRxdWVyeSA9ICJyZXBsYWNlIGludG8gYCNAX190YWNvbmZpZ2AgKGBpZGAsIGBrZXlgLCBgdmFsdWVgKSB2YWx1ZXMoJyIgLiBteXNxbF9lc2NhcGVfc3RyaW5nKGFkZHNsYXNoZXMoJGlkKSkgLiAiJywnIiAuIG15c3FsX2VzY2FwZV9zdHJpbmcoYWRkc2xhc2hlcygkY29uZmlnS2V5KSkgLiAiJywgJyIgLiBteXNxbF9lc2NhcGVfc3RyaW5nKGFkZHNsYXNoZXMoJHZhbHVlKSkgLiAiJykiOwoKICAgICAgICAgICAgJHRoaXMtPmRzcWwtPkV4ZWN1dGVOb25lUXVlcnkoJHF1ZXJ5KTsKICAgICAgICAgICAgcmV0dXJuIFRSVUU7CiAgICAgICAgfWVsc2V7CiAgICAgICAgICAgIHJldHVybiBGQUxTRTsKICAgICAgICB9CgogICAgfQoKICAgIC8qKgogICAgICogsaO05tK7uPbQwtT2xeTWwwogICAgICogQHBhcmFtICAgICBhcnJheSAgJGRhdGEKICAgICAqIEByZXR1cm4gICAgc3RyaW5nCiAgICAgKi8KICAgIGZ1bmN0aW9uIHNhdmVfYWRkKCRkYXRhID0gYXJyYXkoKSkgewogICAgICAgIGlmKGlzX2FycmF5KCRkYXRhKSkKICAgICAgICB7CiAgICAgICAgICAgICRxdWVyeSA9ICJJTlNFUlQgSU5UTyBgI0BfX3RhY29uZmlnYChrZXksIHZhbHVlKSBWQUxVRVMoJ3skZGF0YVsna2V5J119JywneyRkYXRhWyd2YWx1ZSddfScpOyI7CiAgICAJCWlmKCR0aGlzLT5kc3FsLT5FeGVjdXRlTm9uZVF1ZXJ5KCRxdWVyeSkpIHJldHVybiBUUlVFOwogICAgICAgICAgICBlbHNlIHJldHVybiBGQUxTRTsKICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgcmV0dXJuIEZBTFNFOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBnZXRBcmN0eXBlKCRjaGFubmVsVHlwZSkgewogICAgICAgICR0aGlzLT5kc3FsLT5FeGVjdXRlKCdtZScsICJTRUxFQ1QgKiBGUk9NIGAjQF9fYXJjdHlwZWAgd2hlcmUgY2hhbm5lbHR5cGU9JyIuJGNoYW5uZWxUeXBlLiInIik7CiAgICAgICAgJG9wdGlvbnMgPSBhcnJheShhcnJheSgndmFsdWUnID0+ICcnLCAndGV4dCcgPT4gdXJsZW5jb2RlKGRpY29udign0aHU8cT6tcTAuMS/JywgJ2diaycsICd1dGYtOCcpKSkpOwogICAgICAgIHdoaWxlKCRyb3cgPSAkdGhpcy0+ZHNxbC0+R2V0QXJyYXkoJ21lJykpCiAgICAgICAgewogICAgICAgICAgICBpZiAoJHJvd1sndHlwZW5hbWUnXSAhPSAnzsq08CcpIHsKICAgICAgICAgICAgICAgICRvcHRpb25zW10gPSBhcnJheSgndmFsdWUnID0+ICRyb3dbJ2lkJ10sICd0ZXh0JyA9PiB1cmxlbmNvZGUoZGljb252KCRyb3dbJ3R5cGVuYW1lJ10sICdnYmsnLCAndXRmLTgnKSkpOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJG9wdGlvbnM7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0UGFyZW50Q2F0ZWdvcnkoJHR5cGVpZCwgJHR5cGUgPSAxKSB7CiAgICAgICAgJHBhcmVudCA9ICcnOwogICAgICAgIGlmICgkdHlwZSkgewogICAgICAgICAgICAkdGhpcy0+ZHNxbC0+RXhlY3V0ZSgnbWUnLCAiU0VMRUNUICogRlJPTSBgI0BfX2FyY3R5cGVgIik7CiAgICAgICAgICAgIHdoaWxlKCRyb3cgPSAkdGhpcy0+ZHNxbC0+R2V0QXJyYXkoJ21lJykpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRwYXJlbnQgPSAkcm93WydyZWlkJ107CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAkdGhpcy0+ZHNxbC0+U2V0UXVlcnkoIlNFTEVDVCAqIEZST00gYCNAX19hc2t0eXBlYCB3aGVyZSBpZD0nIi4kdHlwZWlkLiInIik7CiAgICAgICAgICAgICR0aGlzLT5kc3FsLT5FeGVjdXRlKCk7CiAgICAgICAgICAgIHdoaWxlKCRyb3cgPSAkdGhpcy0+ZHNxbC0+R2V0QXJyYXkoKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJHBhcmVudCA9ICRyb3dbJ3JlaWQnXTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRwYXJlbnQ7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0QXNrdHlwZSgpIHsKICAgICAgICAkdGhpcy0+ZHNxbC0+U2V0UXVlcnkoIlNFTEVDVCAqIEZST00gYCNAX19hc2t0eXBlYCIpOwogICAgICAgICR0aGlzLT5kc3FsLT5FeGVjdXRlKCk7CiAgICAgICAgJG9wdGlvbnMgPSBhcnJheShhcnJheSgndmFsdWUnID0+ICcnLCAndGV4dCcgPT4gdXJsZW5jb2RlKGRpY29udign0aHU8cT6tcTOyrTwwLjEvycsICdnYmsnLCAndXRmLTgnKSkpKTsKICAgICAgICB3aGlsZSgkcm93ID0gJHRoaXMtPmRzcWwtPkdldEFycmF5KCkpCiAgICAgICAgewogICAgICAgICAgICAkb3B0aW9uc1tdID0gYXJyYXkoJ3ZhbHVlJyA9PiAkcm93WydpZCddLCAndGV4dCcgPT4gdXJsZW5jb2RlKGRpY29udigkcm93WyduYW1lJ10sICdnYmsnLCAndXRmLTgnKSkpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRvcHRpb25zOwogICAgfQoKICAgIGZ1bmN0aW9uIGFza0V4aXN0KCkgewogICAgICAgICR0aGlzLT5kc3FsLT5TZXRRdWVyeSgiU0VMRUNUICogRlJPTSBgI0BfX3N5c19tb2R1bGVgIHdoZXJlIG1vZG5hbWU9J87KtPDEo7/pJyIpOwogICAgICAgICR0aGlzLT5kc3FsLT5FeGVjdXRlKCk7CiAgICAgICAgJHJvdyA9ICR0aGlzLT5kc3FsLT5HZXRPYmplY3QoKTsKICAgICAgICBpZiAoISRyb3cgfHwgISRyb3ctPmhhc2hjb2RlKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgoKfQ==
</file>
<file type='dir' name='../shenjianshou/static'>
</file>
<file type='dir' name='../shenjianshou/static/style'>
</file>
<file type='file' name='../shenjianshou/static/style/admin.css'>

</file>
<file type='dir' name='../shenjianshou/templates'>
</file>
<file type='dir' name='../shenjianshou/templates/admin'>
</file>
<file type='file' name='../shenjianshou/templates/admin/shenjianshou_config.htm'>
PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPg0KPGhlYWQ+DQo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIgLz4NCjx0aXRsZT7J8bz9ytbUxsXAs+ay5bz+yejWwzwvdGl0bGU+DQo8bGluayBocmVmPSJzdGF0aWMvc3R5bGUvYWRtaW4uY3NzIiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAvPg0KPC9oZWFkPg0KPGJvZHk+DQo8Zm9ybSBuYW1lPSJmb3JtIiBhY3Rpb249Ij9jdD1jb25maWdDb250cm9sbGVyJmFjPWVkaXRfc2F2ZSIgbWV0aG9kPSJwb3N0IiBzdHlsZT0icGFkZGluZy10b3A6IDE1cHg7IiBvbnN1Ym1pdD0icmV0dXJuIGNvbmZpcm0oJ8i3yM/J6NbDPycpOyI+DQogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icGlkIiB2YWx1ZT0iPD8gZWNobyAkcGlkOyA/PiI+DQogICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGFsaWduPSJjZW50ZXIiIGNlbGxwYWRkaW5nPSIzIiBjZWxsc3BhY2luZz0iMSIgY2xhc3M9InRidGl0bGUiIHN0eWxlPSJiYWNrZ3JvdW5kOiNFMkY1QkM7Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICA8dHI+DQogICAgICAgICAgPHRkIGhlaWdodD0iMjUiIGNvbHNwYW49IjIiPsnxvP3K1tTGxcCz5reisrzF5NbDPC90ZD4NCiAgICAgICAgPC90cj4NCiAgICAgICAgPHRyPg0KICAgICAgICAgIDx0ZCBoZWlnaHQ9IjI1IiBiZ2NvbG9yPSIjRkZGRkZGIj4gPGRpdiBhbGlnbj0ibGVmdCI+tbHHsLLlvP6w5rG+PC9kaXY+PC90ZD4NCiAgICAgICAgICA8dGQgaGVpZ2h0PSIyNSIgYmdjb2xvcj0iI0ZGRkZGRiI+DQogICAgICAgICAgICAgIDxiPjw/cGhwIGVjaG8gJHRhY29uZmlnWyd2ZXJzaW9uJ107ID8+PC9iPg0KICAgICAgICAgICAgPGZvbnQgY29sb3I9IiM2NjY2NjYiPijX7tDCsOaxvrvhtqjG2tTaUVHIujQ4MzIyMDUyMtbQt6KyvCk8L2ZvbnQ+Jm5ic3A7DQogICAgICAgICAgICA8YSBocmVmPSK147v3wbS907zTyOvIuqG+yfG8/crW1Mayybyv1q/DzqG/o7podHRwOi8vanEucXEuY29tLz9fd3Y9MTAyNyZrPTJDNGNNT1IiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6Ymx1ZTsiPrXju/e808jrUVHIujwvYT4NCiAgICAgICAgICA8L3RkPg0KICAgICAgICA8L3RyPg0KICAgICAgICA8dHI+DQogICAgICAgICAgPHRkIGhlaWdodD0iMjUiIGJnY29sb3I9IiNGRkZGRkYiPsnxvP3K1tTGxcCz5rnZzfg8L3RkPg0KICAgICAgICAgIDx0ZCBoZWlnaHQ9IjI1IiBiZ2NvbG9yPSIjRkZGRkZGIj4gPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly93d3cuc2hlbmppYW5zaG91LmNuLyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibHVlOyI+d3d3LnNoZW5qaWFuc2hvdS5jbjwvYT4NCiAgICAgICAgPC90cj4NCiAgICAgICAgPHRyPg0KICAgICAgICAgIDx0ZCBoZWlnaHQ9IjI1IiBiZ2NvbG9yPSIjRkZGRkZGIj63orK8zfjWtzwvdGQ+DQogICAgICAgICAgPHRkIGhlaWdodD0iMjUiIGJnY29sb3I9IiNGRkZGRkYiPiA8c3BhbiBzdHlsZT0iZm9udC13ZWlnaHQ6IDYwMDsiPjw/cGhwIGVjaG8gJGJhc2ljX3dlYl9hZGRyZXNzOyA/Pjwvc3Bhbj4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDs8Zm9udCBjb2xvcj0iIzY2NjY2NiI+KLTLtdjWt86qxPrN+NW+t8POyrXY1rejrMT6v8nS1Li01sa4w7XY1reyoszuyOvJ8bz9yta688yoIERFREVDTVMgt6KyvL3Tv9rF5NbD1tC1xLeisrzN+Na3yuTI67/yxNopPC9mb250Pg0KICAgICAgICA8L3RyPg0KICAgICAgICA8dHI+DQogICAgICAgICAgPHRkIHdpZHRoPSIxNyUiIGhlaWdodD0iMjUiIGJnY29sb3I9IiNGRkZGRkYiPiA8ZGl2IGFsaWduPSJsZWZ0Ij63orK8w9zC6zwvZGl2PjwvdGQ+DQogICAgICAgICAgPHRkIHdpZHRoPSI4MyUiIGhlaWdodD0iMjUiIGJnY29sb3I9IiNGRkZGRkYiPiA8aW5wdXQgbmFtZT0idGFfcGFzc3dvcmQiIHR5cGU9InRleHQiIGlkPSJ0YV9wYXNzd29yZCIgdmFsdWU9Ijw/cGhwIGVjaG8gJHRhX3Bhc3N3b3JkOyA/PiIgc2l6ZT0iMzUiPg0KICAgICAgICAgICAgPGZvbnQgY29sb3I9IiM2NjY2NjYiPii9qNLp0N64xLPJ19S8urXEs6PTw8PcwuujrLKizO7I68nxvP3K1rrzzKi127n6t6KyvNGhz+7W0LXEt6KyvMPcwuvK5Mjrv/LE2iwgx+vO8Mq508PM2Mri19a3+7vyurrX1ik8L2ZvbnQ+PC90ZD4NCiAgICAgICAgPC90cj4NCiAgICAgICAgPHRyPg0KICAgICAgICAgIDx0ZCBoZWlnaHQ9IjI1IiBiZ2NvbG9yPSIjRkZGRkZGIj48L3RkPg0KICAgICAgICAgIDx0ZCBoZWlnaHQ9IjI1IiBiZ2NvbG9yPSIjRkZGRkZGIj4gPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iU3VibWl0IiB2YWx1ZT0iIMnoINbDICI+DQogICAgICAgICAgICAmbmJzcDsmbmJzcDsmbmJzcDsgPC90ZD4NCiAgICAgICAgPC90cj4NCiAgICAgICAgPC90Ym9keT4NCiAgICA8L3RhYmxlPg0KPC9mb3JtPg0KDQo8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgYWxpZ249ImNlbnRlciIgY2VsbHBhZGRpbmc9IjMiIGNlbGxzcGFjaW5nPSIxIj4NCgk8dHI+DQoJCTx0ZD7LtcP3o7o8L3RkPg0KCTwvdHI+DQoJPHRyPg0KICAgICAgICAgICAgPHRkPjGhotb30qq1xLLJvK/J6NbDxvS2r7XIvvnU2snxvP3K1tTGxcCz5rrzzKiy2df3o6zQ6NKqz8g8YSBocmVmPSJodHRwOi8vd3d3LnNoZW5qaWFuc2hvdS5jbi9pbmRleC5waHA/cj1pbmRleC9yZWdpc3RlciIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibHVlOyI+16Ky4TwvYT7J8bz9ytbVy7rFLCA8YSBocmVmPSJodHRwOi8vZGVtby5zaGVuamlhbnNob3UuY24vcGRvYy9ERURFQ01TUHVibGlzaC5odG1sIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsdWU7Ij6147v3sum/tMq508O9zLPMPC9hPqGjPC90ZD4NCgk8L3RyPg0KCTx0cj4NCiAgICAgICAgICAgIDx0ZD4yoaLJ8bz9yta087K/t9a5psTcPGEgaHJlZj0iaHR0cDovL3d3dy5zaGVuamlhbnNob3UuY24vaW5kZXgucGhwP3I9aW5kZXgvcHJpY2luZyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibHVlOyI+w+K30bvh1LE8L2E+vvm/ycq508OjrMfruPm+3cT6tcTQ6Mfz0aHU8bbU06a1xMXAs+ajqDxhIGhyZWY9Imh0dHA6Ly93d3cuc2hlbmppYW5zaG91LmNuL2luZGV4LnBocD9yPW1hcmtldC9pbmRleCIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibHVlOyI+sum/tMXAs+bUxsrQs6E8L2E+o6mhozwvdGQ+DQoJPC90cj4NCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgPHRkPjOhoreisrzJ6NbD0rLQ6NKq1NrJ8bz9yta688yovfjQ0LLZ1/ehoyA8L3RkPg0KCTwvdHI+DQo8L3RhYmxlPg0KPC9ib2R5Pg0KPC9odG1sPg0K
</file>
</modulefiles>
</module>
